        -:    0:Source:C:/msys64/ucrt64/include/c++/15.1.0/x86_64-w64-mingw32/bits/c++config.h
        -:    0:Graph:test_time_logic_minimal_coverage-time_logic.gcno
        -:    0:Data:test_time_logic_minimal_coverage-time_logic.gcda
        -:    0:Runs:1
        -:    1:// Predefined symbols and macros -*- C++ -*-
        -:    2:
        -:    3:// Copyright (C) 1997-2025 Free Software Foundation, Inc.
        -:    4://
        -:    5:// This file is part of the GNU ISO C++ Library.  This library is free
        -:    6:// software; you can redistribute it and/or modify it under the
        -:    7:// terms of the GNU General Public License as published by the
        -:    8:// Free Software Foundation; either version 3, or (at your option)
        -:    9:// any later version.
        -:   10:
        -:   11:// This library is distributed in the hope that it will be useful,
        -:   12:// but WITHOUT ANY WARRANTY; without even the implied warranty of
        -:   13:// MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
        -:   14:// GNU General Public License for more details.
        -:   15:
        -:   16:// Under Section 7 of GPL version 3, you are granted additional
        -:   17:// permissions described in the GCC Runtime Library Exception, version
        -:   18:// 3.1, as published by the Free Software Foundation.
        -:   19:
        -:   20:// You should have received a copy of the GNU General Public License and
        -:   21:// a copy of the GCC Runtime Library Exception along with this program;
        -:   22:// see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
        -:   23:// <http://www.gnu.org/licenses/>.
        -:   24:
        -:   25:/** @file bits/c++config.h
        -:   26: *  This is an internal header file, included by other library headers.
        -:   27: *  Do not attempt to use it directly. @headername{version}
        -:   28: */
        -:   29:
        -:   30:#ifndef _GLIBCXX_CXX_CONFIG_H
        -:   31:#define _GLIBCXX_CXX_CONFIG_H 1
        -:   32:
        -:   33:#ifdef _GLIBCXX_SYSHDR
        -:   34:#pragma GCC system_header
        -:   35:#endif
        -:   36:
        -:   37:#pragma GCC diagnostic push
        -:   38:#pragma GCC diagnostic ignored "-Wvariadic-macros"
        -:   39:#if __cplusplus
        -:   40:#pragma GCC diagnostic ignored "-Wc++11-extensions"
        -:   41:#pragma GCC diagnostic ignored "-Wc++23-extensions" // bf16
        -:   42:#endif
        -:   43:
        -:   44:// The major release number for the GCC release the C++ library belongs to.
        -:   45:#define _GLIBCXX_RELEASE 15
        -:   46:
        -:   47:// The datestamp of the C++ library in compressed ISO date format.
        -:   48:#undef __GLIBCXX__ /* The testsuite defines it to 99999999 to block PCH.  */
        -:   49:#define __GLIBCXX__ 20250425
        -:   50:
        -:   51:// Macros for various attributes.
        -:   52://   _GLIBCXX_PURE
        -:   53://   _GLIBCXX_CONST
        -:   54://   _GLIBCXX_NORETURN
        -:   55://   _GLIBCXX_NOTHROW
        -:   56://   _GLIBCXX_VISIBILITY
        -:   57:#ifndef _GLIBCXX_PURE
        -:   58:# define _GLIBCXX_PURE __attribute__ ((__pure__))
        -:   59:#endif
        -:   60:
        -:   61:#ifndef _GLIBCXX_CONST
        -:   62:# define _GLIBCXX_CONST __attribute__ ((__const__))
        -:   63:#endif
        -:   64:
        -:   65:#ifndef _GLIBCXX_NORETURN
        -:   66:# define _GLIBCXX_NORETURN __attribute__ ((__noreturn__))
        -:   67:#endif
        -:   68:
        -:   69:// See below for C++
        -:   70:#ifndef _GLIBCXX_NOTHROW
        -:   71:# ifndef __cplusplus
        -:   72:#  define _GLIBCXX_NOTHROW __attribute__((__nothrow__))
        -:   73:# endif
        -:   74:#endif
        -:   75:
        -:   76:// Macros for visibility attributes.
        -:   77://   _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY
        -:   78://   _GLIBCXX_VISIBILITY
        -:   79:# define _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY 0
        -:   80:
        -:   81:#if _GLIBCXX_HAVE_ATTRIBUTE_VISIBILITY
        -:   82:# define _GLIBCXX_VISIBILITY(V) __attribute__ ((__visibility__ (#V)))
        -:   83:#else
        -:   84:// If this is not supplied by the OS-specific or CPU-specific
        -:   85:// headers included below, it will be defined to an empty default.
        -:   86:# define _GLIBCXX_VISIBILITY(V) _GLIBCXX_PSEUDO_VISIBILITY(V)
        -:   87:#endif
        -:   88:
        -:   89:// Macros for deprecated attributes.
        -:   90://   _GLIBCXX_USE_DEPRECATED
        -:   91://   _GLIBCXX_DEPRECATED
        -:   92://   _GLIBCXX_DEPRECATED_SUGGEST( string-literal )
        -:   93://   _GLIBCXX11_DEPRECATED
        -:   94://   _GLIBCXX11_DEPRECATED_SUGGEST( string-literal )
        -:   95://   _GLIBCXX14_DEPRECATED
        -:   96://   _GLIBCXX14_DEPRECATED_SUGGEST( string-literal )
        -:   97://   _GLIBCXX17_DEPRECATED
        -:   98://   _GLIBCXX17_DEPRECATED_SUGGEST( string-literal )
        -:   99://   _GLIBCXX20_DEPRECATED
        -:  100://   _GLIBCXX20_DEPRECATED_SUGGEST( string-literal )
        -:  101://   _GLIBCXX23_DEPRECATED
        -:  102://   _GLIBCXX23_DEPRECATED_SUGGEST( string-literal )
        -:  103://   _GLIBCXX26_DEPRECATED
        -:  104://   _GLIBCXX26_DEPRECATED_SUGGEST( string-literal )
        -:  105:#ifndef _GLIBCXX_USE_DEPRECATED
        -:  106:# define _GLIBCXX_USE_DEPRECATED 1
        -:  107:#endif
        -:  108:
        -:  109:#if defined(__DEPRECATED)
        -:  110:# define _GLIBCXX_DEPRECATED __attribute__ ((__deprecated__))
        -:  111:# define _GLIBCXX_DEPRECATED_SUGGEST(ALT) \
        -:  112:  __attribute__ ((__deprecated__ ("use '" ALT "' instead")))
        -:  113:#else
        -:  114:# define _GLIBCXX_DEPRECATED
        -:  115:# define _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  116:#endif
        -:  117:
        -:  118:#if defined(__DEPRECATED) && (__cplusplus >= 201103L)
        -:  119:# define _GLIBCXX11_DEPRECATED _GLIBCXX_DEPRECATED
        -:  120:# define _GLIBCXX11_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  121:#else
        -:  122:# define _GLIBCXX11_DEPRECATED
        -:  123:# define _GLIBCXX11_DEPRECATED_SUGGEST(ALT)
        -:  124:#endif
        -:  125:
        -:  126:#if defined(__DEPRECATED) && (__cplusplus >= 201402L)
        -:  127:# define _GLIBCXX14_DEPRECATED _GLIBCXX_DEPRECATED
        -:  128:# define _GLIBCXX14_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  129:#else
        -:  130:# define _GLIBCXX14_DEPRECATED
        -:  131:# define _GLIBCXX14_DEPRECATED_SUGGEST(ALT)
        -:  132:#endif
        -:  133:
        -:  134:#if defined(__DEPRECATED) && (__cplusplus >= 201703L)
        -:  135:# define _GLIBCXX17_DEPRECATED [[__deprecated__]]
        -:  136:# define _GLIBCXX17_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  137:#else
        -:  138:# define _GLIBCXX17_DEPRECATED
        -:  139:# define _GLIBCXX17_DEPRECATED_SUGGEST(ALT)
        -:  140:#endif
        -:  141:
        -:  142:#if defined(__DEPRECATED) && (__cplusplus >= 202002L)
        -:  143:# define _GLIBCXX20_DEPRECATED [[__deprecated__]]
        -:  144:# define _GLIBCXX20_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  145:#else
        -:  146:# define _GLIBCXX20_DEPRECATED
        -:  147:# define _GLIBCXX20_DEPRECATED_SUGGEST(ALT)
        -:  148:#endif
        -:  149:
        -:  150:#if defined(__DEPRECATED) && (__cplusplus >= 202100L)
        -:  151:# define _GLIBCXX23_DEPRECATED [[__deprecated__]]
        -:  152:# define _GLIBCXX23_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  153:#else
        -:  154:# define _GLIBCXX23_DEPRECATED
        -:  155:# define _GLIBCXX23_DEPRECATED_SUGGEST(ALT)
        -:  156:#endif
        -:  157:
        -:  158:#if defined(__DEPRECATED) && (__cplusplus >= 202400L)
        -:  159:# define _GLIBCXX26_DEPRECATED [[__deprecated__]]
        -:  160:# define _GLIBCXX26_DEPRECATED_SUGGEST(ALT) _GLIBCXX_DEPRECATED_SUGGEST(ALT)
        -:  161:#else
        -:  162:# define _GLIBCXX26_DEPRECATED
        -:  163:# define _GLIBCXX26_DEPRECATED_SUGGEST(ALT)
        -:  164:#endif
        -:  165:
        -:  166:// Macros for ABI tag attributes.
        -:  167:#ifndef _GLIBCXX_ABI_TAG_CXX11
        -:  168:# define _GLIBCXX_ABI_TAG_CXX11 __attribute ((__abi_tag__ ("cxx11")))
        -:  169:#endif
        -:  170:
        -:  171:// Macro to warn about unused results.
        -:  172:#if __cplusplus >= 201103L
        -:  173:# define _GLIBCXX_NODISCARD [[__nodiscard__]]
        -:  174:#else
        -:  175:# define _GLIBCXX_NODISCARD
        -:  176:#endif
        -:  177:
        -:  178:
        -:  179:
        -:  180:#if __cplusplus
        -:  181:
        -:  182:// Macro for constexpr, to support in mixed 03/0x mode.
        -:  183:#ifndef _GLIBCXX_CONSTEXPR
        -:  184:# if __cplusplus >= 201103L
        -:  185:#  define _GLIBCXX_CONSTEXPR constexpr
        -:  186:#  define _GLIBCXX_USE_CONSTEXPR constexpr
        -:  187:# else
        -:  188:#  define _GLIBCXX_CONSTEXPR
        -:  189:#  define _GLIBCXX_USE_CONSTEXPR const
        -:  190:# endif
        -:  191:#endif
        -:  192:
        -:  193:#ifndef _GLIBCXX14_CONSTEXPR
        -:  194:# if __cplusplus >= 201402L
        -:  195:#  define _GLIBCXX14_CONSTEXPR constexpr
        -:  196:# else
        -:  197:#  define _GLIBCXX14_CONSTEXPR
        -:  198:# endif
        -:  199:#endif
        -:  200:
        -:  201:#ifndef _GLIBCXX17_CONSTEXPR
        -:  202:# if __cplusplus >= 201703L
        -:  203:#  define _GLIBCXX17_CONSTEXPR constexpr
        -:  204:# else
        -:  205:#  define _GLIBCXX17_CONSTEXPR
        -:  206:# endif
        -:  207:#endif
        -:  208:
        -:  209:#ifndef _GLIBCXX20_CONSTEXPR
        -:  210:# if __cplusplus >= 202002L
        -:  211:#  define _GLIBCXX20_CONSTEXPR constexpr
        -:  212:# else
        -:  213:#  define _GLIBCXX20_CONSTEXPR
        -:  214:# endif
        -:  215:#endif
        -:  216:
        -:  217:#ifndef _GLIBCXX23_CONSTEXPR
        -:  218:# if __cplusplus >= 202100L
        -:  219:#  define _GLIBCXX23_CONSTEXPR constexpr
        -:  220:# else
        -:  221:#  define _GLIBCXX23_CONSTEXPR
        -:  222:# endif
        -:  223:#endif
        -:  224:
        -:  225:#ifndef _GLIBCXX26_CONSTEXPR
        -:  226:# if __cplusplus >= 202400L
        -:  227:#  define _GLIBCXX26_CONSTEXPR constexpr
        -:  228:# else
        -:  229:#  define _GLIBCXX26_CONSTEXPR
        -:  230:# endif
        -:  231:#endif
        -:  232:
        -:  233:#ifndef _GLIBCXX17_INLINE
        -:  234:# if __cplusplus >= 201703L
        -:  235:#  define _GLIBCXX17_INLINE inline
        -:  236:# else
        -:  237:#  define _GLIBCXX17_INLINE
        -:  238:# endif
        -:  239:#endif
        -:  240:
        -:  241:// Macro for noexcept, to support in mixed 03/0x mode.
        -:  242:#ifndef _GLIBCXX_NOEXCEPT
        -:  243:# if __cplusplus >= 201103L
        -:  244:#  define _GLIBCXX_NOEXCEPT noexcept
        -:  245:#  define _GLIBCXX_NOEXCEPT_IF(...) noexcept(__VA_ARGS__)
        -:  246:#  define _GLIBCXX_USE_NOEXCEPT noexcept
        -:  247:#  define _GLIBCXX_THROW(_EXC)
        -:  248:# else
        -:  249:#  define _GLIBCXX_NOEXCEPT
        -:  250:#  define _GLIBCXX_NOEXCEPT_IF(...)
        -:  251:#  define _GLIBCXX_USE_NOEXCEPT throw()
        -:  252:#  define _GLIBCXX_THROW(_EXC) throw(_EXC)
        -:  253:# endif
        -:  254:#endif
        -:  255:
        -:  256:#ifndef _GLIBCXX_NOTHROW
        -:  257:# define _GLIBCXX_NOTHROW _GLIBCXX_USE_NOEXCEPT
        -:  258:#endif
        -:  259:
        -:  260:#ifndef _GLIBCXX_THROW_OR_ABORT
        -:  261:# if __cpp_exceptions
        -:  262:#  define _GLIBCXX_THROW_OR_ABORT(_EXC) (throw (_EXC))
        -:  263:# else
        -:  264:#  define _GLIBCXX_THROW_OR_ABORT(_EXC) (__builtin_abort(), (void)(_EXC))
        -:  265:# endif
        -:  266:#endif
        -:  267:
        -:  268:#if __cpp_noexcept_function_type
        -:  269:#define _GLIBCXX_NOEXCEPT_PARM , bool _NE
        -:  270:#define _GLIBCXX_NOEXCEPT_QUAL noexcept (_NE)
        -:  271:#else
        -:  272:#define _GLIBCXX_NOEXCEPT_PARM
        -:  273:#define _GLIBCXX_NOEXCEPT_QUAL
        -:  274:#endif
        -:  275:
        -:  276:// Macro for extern template, ie controlling template linkage via use
        -:  277:// of extern keyword on template declaration. As documented in the g++
        -:  278:// manual, it inhibits all implicit instantiations and is used
        -:  279:// throughout the library to avoid multiple weak definitions for
        -:  280:// required types that are already explicitly instantiated in the
        -:  281:// library binary. This substantially reduces the binary size of
        -:  282:// resulting executables.
        -:  283:// Special case: _GLIBCXX_EXTERN_TEMPLATE == -1 disallows extern
        -:  284:// templates only in basic_string, thus activating its debug-mode
        -:  285:// checks even at -O0.
        -:  286:# define _GLIBCXX_EXTERN_TEMPLATE 1
        -:  287:
        -:  288:/*
        -:  289:  Outline of libstdc++ namespaces.
        -:  290:
        -:  291:  namespace std
        -:  292:  {
        -:  293:    namespace __debug { }
        -:  294:    namespace __parallel { }
        -:  295:    namespace __cxx1998 { }
        -:  296:
        -:  297:    namespace __detail {
        -:  298:      namespace __variant { }				// C++17
        -:  299:    }
        -:  300:
        -:  301:    namespace rel_ops { }
        -:  302:
        -:  303:    namespace tr1
        -:  304:    {
        -:  305:      namespace placeholders { }
        -:  306:      namespace regex_constants { }
        -:  307:      namespace __detail { }
        -:  308:    }
        -:  309:
        -:  310:    namespace tr2 { }
        -:  311:    
        -:  312:    namespace decimal { }
        -:  313:
        -:  314:    namespace chrono { }				// C++11
        -:  315:    namespace placeholders { }				// C++11
        -:  316:    namespace regex_constants { }			// C++11
        -:  317:    namespace this_thread { }				// C++11
        -:  318:    inline namespace literals {				// C++14
        -:  319:      inline namespace chrono_literals { }		// C++14
        -:  320:      inline namespace complex_literals { }		// C++14
        -:  321:      inline namespace string_literals { }		// C++14
        -:  322:      inline namespace string_view_literals { }		// C++17
        -:  323:    }
        -:  324:  }
        -:  325:
        -:  326:  namespace abi { }
        -:  327:
        -:  328:  namespace __gnu_cxx
        -:  329:  {
        -:  330:    namespace __detail { }
        -:  331:  }
        -:  332:
        -:  333:  For full details see:
        -:  334:  http://gcc.gnu.org/onlinedocs/libstdc++/latest-doxygen/namespaces.html
        -:  335:*/
        -:  336:namespace std
        -:  337:{
        -:  338:  typedef __SIZE_TYPE__ 	size_t;
        -:  339:  typedef __PTRDIFF_TYPE__	ptrdiff_t;
        -:  340:
        -:  341:#if __cplusplus >= 201103L
        -:  342:  typedef decltype(nullptr)	nullptr_t;
        -:  343:#endif
        -:  344:
        -:  345:#pragma GCC visibility push(default)
        -:  346:  // This allows the library to terminate without including all of <exception>
        -:  347:  // and without making the declaration of std::terminate visible to users.
        -:  348:  extern "C++" __attribute__ ((__noreturn__, __always_inline__))
        -:  349:  inline void __terminate() _GLIBCXX_USE_NOEXCEPT
        -:  350:  {
        -:  351:    void terminate() _GLIBCXX_USE_NOEXCEPT __attribute__ ((__noreturn__,__cold__));
        -:  352:    terminate();
        -:  353:  }
        -:  354:#pragma GCC visibility pop
        -:  355:}
        -:  356:
        -:  357:# define _GLIBCXX_USE_DUAL_ABI 1
        -:  358:
        -:  359:#if ! _GLIBCXX_USE_DUAL_ABI
        -:  360:// Ignore any pre-defined value of _GLIBCXX_USE_CXX11_ABI
        -:  361:# undef _GLIBCXX_USE_CXX11_ABI
        -:  362:#endif
        -:  363:
        -:  364:#ifndef _GLIBCXX_USE_CXX11_ABI
        -:  365:# define _GLIBCXX_USE_CXX11_ABI 1
        -:  366:#endif
        -:  367:
        -:  368:#if _GLIBCXX_USE_CXX11_ABI
        -:  369:namespace std
        -:  370:{
        -:  371:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  372:}
        -:  373:namespace __gnu_cxx
        -:  374:{
        -:  375:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  376:}
        -:  377:# define _GLIBCXX_NAMESPACE_CXX11 __cxx11::
        -:  378:# define _GLIBCXX_BEGIN_NAMESPACE_CXX11 namespace __cxx11 {
        -:  379:# define _GLIBCXX_END_NAMESPACE_CXX11 }
        -:  380:# define _GLIBCXX_DEFAULT_ABI_TAG _GLIBCXX_ABI_TAG_CXX11
        -:  381:#else
        -:  382:# define _GLIBCXX_NAMESPACE_CXX11
        -:  383:# define _GLIBCXX_BEGIN_NAMESPACE_CXX11
        -:  384:# define _GLIBCXX_END_NAMESPACE_CXX11
        -:  385:# define _GLIBCXX_DEFAULT_ABI_TAG
        -:  386:#endif
        -:  387:
        -:  388:// Non-zero if inline namespaces are used for versioning the entire library.
        -:  389:# define _GLIBCXX_INLINE_VERSION 0 
        -:  390:
        -:  391:#if _GLIBCXX_INLINE_VERSION
        -:  392:// Inline namespace for symbol versioning of (nearly) everything in std.
        -:  393:# define _GLIBCXX_BEGIN_NAMESPACE_VERSION namespace __8 {
        -:  394:# define _GLIBCXX_END_NAMESPACE_VERSION }
        -:  395:// Unused when everything in std is versioned anyway.
        -:  396:# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(X)
        -:  397:# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(X)
        -:  398:
        -:  399:namespace std
        -:  400:{
        -:  401:inline _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  402:#if __cplusplus >= 201402L
        -:  403:  inline namespace literals {
        -:  404:    inline namespace chrono_literals { }
        -:  405:    inline namespace complex_literals { }
        -:  406:    inline namespace string_literals { }
        -:  407:#if __cplusplus > 201402L
        -:  408:    inline namespace string_view_literals { }
        -:  409:#endif // C++17
        -:  410:  }
        -:  411:#endif // C++14
        -:  412:_GLIBCXX_END_NAMESPACE_VERSION
        -:  413:}
        -:  414:
        -:  415:namespace __gnu_cxx
        -:  416:{
        -:  417:inline _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  418:_GLIBCXX_END_NAMESPACE_VERSION
        -:  419:}
        -:  420:
        -:  421:#else
        -:  422:// Unused.
        -:  423:# define _GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  424:# define _GLIBCXX_END_NAMESPACE_VERSION
        -:  425:// Used to version individual components, e.g. std::_V2::error_category.
        -:  426:# define _GLIBCXX_BEGIN_INLINE_ABI_NAMESPACE(X) inline namespace X {
        -:  427:# define _GLIBCXX_END_INLINE_ABI_NAMESPACE(X)   } // inline namespace X
        -:  428:#endif
        -:  429:
        -:  430:// In the case that we don't have a hosted environment, we can't provide the
        -:  431:// debugging mode.  Instead, we do our best and downgrade to assertions.
        -:  432:#if defined(_GLIBCXX_DEBUG) && !__STDC_HOSTED__
        -:  433:#undef _GLIBCXX_DEBUG
        -:  434:#define _GLIBCXX_ASSERTIONS 1
        -:  435:#endif
        -:  436:
        -:  437:// Inline namespaces for special modes: debug, parallel.
        -:  438:#if defined(_GLIBCXX_DEBUG) || defined(_GLIBCXX_PARALLEL)
        -:  439:namespace std
        -:  440:{
        -:  441:_GLIBCXX_BEGIN_NAMESPACE_VERSION
        -:  442:
        -:  443:  // Non-inline namespace for components replaced by alternates in active mode.
        -:  444:  namespace __cxx1998
        -:  445:  {
        -:  446:# if _GLIBCXX_USE_CXX11_ABI
        -:  447:  inline namespace __cxx11 __attribute__((__abi_tag__ ("cxx11"))) { }
        -:  448:# endif
        -:  449:  }
        -:  450:
        -:  451:_GLIBCXX_END_NAMESPACE_VERSION
        -:  452:
        -:  453:  // Inline namespace for debug mode.
        -:  454:# ifdef _GLIBCXX_DEBUG
        -:  455:  inline namespace __debug { }
        -:  456:# endif
        -:  457:
        -:  458:  // Inline namespaces for parallel mode.
        -:  459:# ifdef _GLIBCXX_PARALLEL
        -:  460:  inline namespace __parallel { }
        -:  461:# endif
        -:  462:}
        -:  463:
        -:  464:// Check for invalid usage and unsupported mixed-mode use.
        -:  465:# if defined(_GLIBCXX_DEBUG) && defined(_GLIBCXX_PARALLEL)
        -:  466:#  error illegal use of multiple inlined namespaces
        -:  467:# endif
        -:  468:
        -:  469:// Check for invalid use due to lack for weak symbols.
        -:  470:# if __NO_INLINE__ && !__GXX_WEAK__
        -:  471:#  warning currently using inlined namespace mode which may fail \
        -:  472:   without inlining due to lack of weak symbols
        -:  473:# endif
        -:  474:#endif
        -:  475:
        -:  476:// Macros for namespace scope. Either namespace std:: or the name
        -:  477:// of some nested namespace within it corresponding to the active mode.
        -:  478:// _GLIBCXX_STD_A
        -:  479:// _GLIBCXX_STD_C
        -:  480://
        -:  481:// Macros for opening/closing conditional namespaces.
        -:  482:// _GLIBCXX_BEGIN_NAMESPACE_ALGO
        -:  483:// _GLIBCXX_END_NAMESPACE_ALGO
        -:  484:// _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        -:  485:// _GLIBCXX_END_NAMESPACE_CONTAINER
        -:  486:#if defined(_GLIBCXX_DEBUG)
        -:  487:# define _GLIBCXX_STD_C __cxx1998
        -:  488:# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER \
        -:  489:	 namespace _GLIBCXX_STD_C {
        -:  490:# define _GLIBCXX_END_NAMESPACE_CONTAINER }
        -:  491:#else
        -:  492:# define _GLIBCXX_STD_C std
        -:  493:# define _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
        -:  494:# define _GLIBCXX_END_NAMESPACE_CONTAINER
        -:  495:#endif
        -:  496:
        -:  497:#ifdef _GLIBCXX_PARALLEL
        -:  498:# define _GLIBCXX_STD_A __cxx1998
        -:  499:# define _GLIBCXX_BEGIN_NAMESPACE_ALGO \
        -:  500:	 namespace _GLIBCXX_STD_A {
        -:  501:# define _GLIBCXX_END_NAMESPACE_ALGO }
        -:  502:#else
        -:  503:# define _GLIBCXX_STD_A std
        -:  504:# define _GLIBCXX_BEGIN_NAMESPACE_ALGO
        -:  505:# define _GLIBCXX_END_NAMESPACE_ALGO
        -:  506:#endif
        -:  507:
        -:  508:// GLIBCXX_ABI Deprecated
        -:  509:// Define if compatibility should be provided for -mlong-double-64.
        -:  510:#undef _GLIBCXX_LONG_DOUBLE_COMPAT
        -:  511:
        -:  512:// Use an alternate macro to test for clang, so as to provide an easy
        -:  513:// workaround for systems (such as vxworks) whose headers require
        -:  514:// __clang__ to be defined, even when compiling with GCC.
        -:  515:#if !defined _GLIBCXX_CLANG && defined __clang__
        -:  516:# define _GLIBCXX_CLANG __clang__
        -:  517:// Turn -D_GLIBCXX_CLANG=0 into -U_GLIBCXX_CLANG, so that
        -:  518:// _GLIBCXX_CLANG can be tested as defined, just like __clang__.
        -:  519:#elif !_GLIBCXX_CLANG
        -:  520:# undef _GLIBCXX_CLANG
        -:  521:#endif
        -:  522:
        -:  523:// Define if compatibility should be provided for alternative 128-bit long
        -:  524:// double formats. Not possible for Clang until __ibm128 is supported.
        -:  525:#ifndef _GLIBCXX_CLANG
        -:  526:#undef _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT
        -:  527:#endif
        -:  528:
        -:  529:// Inline namespaces for long double 128 modes.
        -:  530:#if defined _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT \
        -:  531:  && defined __LONG_DOUBLE_IEEE128__
        -:  532:namespace std
        -:  533:{
        -:  534:  // Namespaces for 128-bit IEEE long double format on 64-bit POWER LE.
        -:  535:  inline namespace __gnu_cxx_ieee128 { }
        -:  536:  inline namespace __gnu_cxx11_ieee128 { }
        -:  537:}
        -:  538:# define _GLIBCXX_NAMESPACE_LDBL __gnu_cxx_ieee128::
        -:  539:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL namespace __gnu_cxx_ieee128 {
        -:  540:# define _GLIBCXX_END_NAMESPACE_LDBL }
        -:  541:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 __gnu_cxx11_ieee128::
        -:  542:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 namespace __gnu_cxx11_ieee128 {
        -:  543:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 }
        -:  544:
        -:  545:#else // _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT && IEEE128
        -:  546:
        -:  547:#if defined _GLIBCXX_LONG_DOUBLE_COMPAT && defined __LONG_DOUBLE_128__
        -:  548:namespace std
        -:  549:{
        -:  550:  inline namespace __gnu_cxx_ldbl128 { }
        -:  551:}
        -:  552:# define _GLIBCXX_NAMESPACE_LDBL __gnu_cxx_ldbl128::
        -:  553:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL namespace __gnu_cxx_ldbl128 {
        -:  554:# define _GLIBCXX_END_NAMESPACE_LDBL }
        -:  555:#else
        -:  556:# define _GLIBCXX_NAMESPACE_LDBL
        -:  557:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL
        -:  558:# define _GLIBCXX_END_NAMESPACE_LDBL
        -:  559:#endif
        -:  560:
        -:  561:#if _GLIBCXX_USE_CXX11_ABI
        -:  562:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_CXX11
        -:  563:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_CXX11
        -:  564:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_CXX11
        -:  565:#else
        -:  566:# define _GLIBCXX_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_NAMESPACE_LDBL
        -:  567:# define _GLIBCXX_BEGIN_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_BEGIN_NAMESPACE_LDBL
        -:  568:# define _GLIBCXX_END_NAMESPACE_LDBL_OR_CXX11 _GLIBCXX_END_NAMESPACE_LDBL
        -:  569:#endif
        -:  570:
        -:  571:#endif // _GLIBCXX_LONG_DOUBLE_ALT128_COMPAT && IEEE128
        -:  572:
        -:  573:namespace std
        -:  574:{
        -:  575:#pragma GCC visibility push(default)
        -:  576:  // Internal version of std::is_constant_evaluated().
        -:  577:  // This can be used without checking if the compiler supports the feature.
        -:  578:  // The macro _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED can be used to check if
        -:  579:  // the compiler support is present to make this function work as expected.
        -:  580:  __attribute__((__always_inline__))
        -:  581:  _GLIBCXX_CONSTEXPR inline bool
        -:  582:  __is_constant_evaluated() _GLIBCXX_NOEXCEPT
        -:  583:  {
        -:  584:#if __cpp_if_consteval >= 202106L
        -:  585:# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
        -:  586:    if consteval { return true; } else { return false; }
        -:  587:#elif __cplusplus >= 201103L && __has_builtin(__builtin_is_constant_evaluated)
        -:  588:# define _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED 1
    #####:  589:    return __builtin_is_constant_evaluated();
        -:  590:#else
        -:  591:    return false;
        -:  592:#endif
        -:  593:  }
        -:  594:#pragma GCC visibility pop
        -:  595:}
        -:  596:
        -:  597:#ifndef _GLIBCXX_ASSERTIONS
        -:  598:# if defined(_GLIBCXX_DEBUG)
        -:  599:// Debug Mode implies checking assertions.
        -:  600:#  define _GLIBCXX_ASSERTIONS 1
        -:  601:# elif ! defined(__OPTIMIZE__) && ! defined(_GLIBCXX_NO_ASSERTIONS)
        -:  602:// Enable assertions for unoptimized builds.
        -:  603:#  define _GLIBCXX_ASSERTIONS 1
        -:  604:# endif
        -:  605:#endif
        -:  606:
        -:  607:// Disable std::string explicit instantiation declarations in order to assert.
        -:  608:#ifdef _GLIBCXX_ASSERTIONS
        -:  609:# undef _GLIBCXX_EXTERN_TEMPLATE
        -:  610:# define _GLIBCXX_EXTERN_TEMPLATE -1
        -:  611:#endif
        -:  612:
        -:  613:#define _GLIBCXX_VERBOSE_ASSERT 1
        -:  614:
        -:  615:// Assert.
        -:  616:#ifdef _GLIBCXX_VERBOSE_ASSERT
        -:  617:namespace std
        -:  618:{
        -:  619:#pragma GCC visibility push(default)
        -:  620:  // Don't use <cassert> because this should be unaffected by NDEBUG.
        -:  621:  extern "C++" _GLIBCXX_NORETURN __attribute__((__cold__))
        -:  622:  void
        -:  623:  __glibcxx_assert_fail /* Called when a precondition violation is detected. */
        -:  624:    (const char* __file, int __line, const char* __function,
        -:  625:     const char* __condition)
        -:  626:  _GLIBCXX_NOEXCEPT;
        -:  627:#pragma GCC visibility pop
        -:  628:}
        -:  629:# define _GLIBCXX_ASSERT_FAIL(_Condition)				\
        -:  630:  std::__glibcxx_assert_fail(__FILE__, __LINE__, __PRETTY_FUNCTION__,	\
        -:  631:			     #_Condition)
        -:  632:#else // ! VERBOSE_ASSERT
        -:  633:# define _GLIBCXX_ASSERT_FAIL(_Condition) __builtin_abort()
        -:  634:#endif
        -:  635:
        -:  636:#if defined(_GLIBCXX_ASSERTIONS)
        -:  637:// When _GLIBCXX_ASSERTIONS is defined we enable runtime assertion checks.
        -:  638:// These checks will also be done during constant evaluation.
        -:  639:# define __glibcxx_assert(cond)						\
        -:  640:  do {									\
        -:  641:    if (__builtin_expect(!bool(cond), false))				\
        -:  642:      _GLIBCXX_ASSERT_FAIL(cond);					\
        -:  643:  } while (false)
        -:  644:#elif _GLIBCXX_HAVE_IS_CONSTANT_EVALUATED
        -:  645:// _GLIBCXX_ASSERTIONS is not defined, so assertions checks are only enabled
        -:  646:// during constant evaluation. This ensures we diagnose undefined behaviour
        -:  647:// in constant expressions.
        -:  648:namespace std
        -:  649:{
        -:  650:  __attribute__((__always_inline__,__visibility__("default")))
        -:  651:  inline void
        -:  652:  __glibcxx_assert_fail()
        -:  653:  { }
        -:  654:}
        -:  655:# define __glibcxx_assert(cond)						\
        -:  656:  do {									\
        -:  657:    if (std::__is_constant_evaluated() && !bool(cond))			\
        -:  658:      std::__glibcxx_assert_fail();					\
        -:  659:  } while (false)
        -:  660:#else
        -:  661:// _GLIBCXX_ASSERTIONS is not defined and __is_constant_evaluated() doesn't
        -:  662:// work so don't check any assertions.
        -:  663:# define __glibcxx_assert(cond)
        -:  664:#endif
        -:  665:
        -:  666:// Macro indicating that TSAN is in use.
        -:  667:#if __SANITIZE_THREAD__
        -:  668:#  define _GLIBCXX_TSAN 1
        -:  669:#elif defined __has_feature
        -:  670:# if __has_feature(thread_sanitizer)
        -:  671:#  define _GLIBCXX_TSAN 1
        -:  672:# endif
        -:  673:#endif
        -:  674:
        -:  675:// Macros for race detectors.
        -:  676:// _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A) and
        -:  677:// _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A) should be used to explain
        -:  678:// atomic (lock-free) synchronization to race detectors:
        -:  679:// the race detector will infer a happens-before arc from the former to the
        -:  680:// latter when they share the same argument pointer.
        -:  681://
        -:  682:// The most frequent use case for these macros (and the only case in the
        -:  683:// current implementation of the library) is atomic reference counting:
        -:  684://   void _M_remove_reference()
        -:  685://   {
        -:  686://     _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
        -:  687://     if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount, -1) <= 0)
        -:  688://       {
        -:  689://         _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
        -:  690://         _M_destroy(__a);
        -:  691://       }
        -:  692://   }
        -:  693:// The annotations in this example tell the race detector that all memory
        -:  694:// accesses occurred when the refcount was positive do not race with
        -:  695:// memory accesses which occurred after the refcount became zero.
        -:  696:#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE
        -:  697:# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(A)
        -:  698:#endif
        -:  699:#ifndef _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER
        -:  700:# define  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(A)
        -:  701:#endif
        -:  702:
        -:  703:// Macros for C linkage: define extern "C" linkage only when using C++.
        -:  704:# define _GLIBCXX_BEGIN_EXTERN_C extern "C" {
        -:  705:# define _GLIBCXX_END_EXTERN_C }
        -:  706:
        -:  707:# define _GLIBCXX_USE_ALLOCATOR_NEW 1
        -:  708:
        -:  709:#ifdef __SIZEOF_INT128__
        -:  710:#if ! defined __GLIBCXX_TYPE_INT_N_0 && ! defined __STRICT_ANSI__
        -:  711:// If __int128 is supported, we expect __GLIBCXX_TYPE_INT_N_0 to be defined
        -:  712:// unless the compiler is in strict mode. If it's not defined and the strict
        -:  713:// macro is not defined, something is wrong.
        -:  714:#warning "__STRICT_ANSI__ seems to have been undefined; this is not supported"
        -:  715:#endif
        -:  716:#endif
        -:  717:
        -:  718:#else // !__cplusplus
        -:  719:# define _GLIBCXX_BEGIN_EXTERN_C
        -:  720:# define _GLIBCXX_END_EXTERN_C
        -:  721:#endif
        -:  722:
        -:  723:
        -:  724:// First includes.
        -:  725:
        -:  726:// Pick up any OS-specific definitions.
        -:  727:#include <bits/os_defines.h>
        -:  728:
        -:  729:// Pick up any CPU-specific definitions.
        -:  730:#include <bits/cpu_defines.h>
        -:  731:
        -:  732:// If platform uses neither visibility nor psuedo-visibility,
        -:  733:// specify empty default for namespace annotation macros.
        -:  734:#ifndef _GLIBCXX_PSEUDO_VISIBILITY
        -:  735:# define _GLIBCXX_PSEUDO_VISIBILITY(V)
        -:  736:#endif
        -:  737:
        -:  738:// Certain function definitions that are meant to be overridable from
        -:  739:// user code are decorated with this macro.  For some targets, this
        -:  740:// macro causes these definitions to be weak.
        -:  741:#ifndef _GLIBCXX_WEAK_DEFINITION
        -:  742:# define _GLIBCXX_WEAK_DEFINITION
        -:  743:#endif
        -:  744:
        -:  745:// By default, we assume that __GXX_WEAK__ also means that there is support
        -:  746:// for declaring functions as weak while not defining such functions.  This
        -:  747:// allows for referring to functions provided by other libraries (e.g.,
        -:  748:// libitm) without depending on them if the respective features are not used.
        -:  749:#ifndef _GLIBCXX_USE_WEAK_REF
        -:  750:# define _GLIBCXX_USE_WEAK_REF __GXX_WEAK__
        -:  751:#endif
        -:  752:
        -:  753:// Conditionally enable annotations for the Transactional Memory TS on C++11.
        -:  754:// Most of the following conditions are due to limitations in the current
        -:  755:// implementation.
        -:  756:#if __cplusplus >= 201103L && _GLIBCXX_USE_CXX11_ABI			\
        -:  757:  && _GLIBCXX_USE_DUAL_ABI && __cpp_transactional_memory >= 201500L	\
        -:  758:  &&  !_GLIBCXX_FULLY_DYNAMIC_STRING && _GLIBCXX_USE_WEAK_REF		\
        -:  759:  && _GLIBCXX_USE_ALLOCATOR_NEW
        -:  760:#define _GLIBCXX_TXN_SAFE transaction_safe
        -:  761:#define _GLIBCXX_TXN_SAFE_DYN transaction_safe_dynamic
        -:  762:#else
        -:  763:#define _GLIBCXX_TXN_SAFE
        -:  764:#define _GLIBCXX_TXN_SAFE_DYN
        -:  765:#endif
        -:  766:
        -:  767:#if __cplusplus > 201402L
        -:  768:// In C++17 mathematical special functions are in namespace std.
        -:  769:# define _GLIBCXX_USE_STD_SPEC_FUNCS 1
        -:  770:#elif __cplusplus >= 201103L && __STDCPP_WANT_MATH_SPEC_FUNCS__ != 0
        -:  771:// For C++11 and C++14 they are in namespace std when requested.
        -:  772:# define _GLIBCXX_USE_STD_SPEC_FUNCS 1
        -:  773:#endif
        -:  774:
        -:  775:// The remainder of the prewritten config is automatic; all the
        -:  776:// user hooks are listed above.
        -:  777:
        -:  778:// Create a boolean flag to be used to determine if --fast-math is set.
        -:  779:#ifdef __FAST_MATH__
        -:  780:# define _GLIBCXX_FAST_MATH 1
        -:  781:#else
        -:  782:# define _GLIBCXX_FAST_MATH 0
        -:  783:#endif
        -:  784:
        -:  785:// This marks string literals in header files to be extracted for eventual
        -:  786:// translation.  It is primarily used for messages in thrown exceptions; see
        -:  787:// src/functexcept.cc.  We use __N because the more traditional _N is used
        -:  788:// for something else under certain OSes (see BADNAMES).
        -:  789:#define __N(msgid)     (msgid)
        -:  790:
        -:  791:// For example, <windows.h> is known to #define min and max as macros...
        -:  792:#undef min
        -:  793:#undef max
        -:  794:
        -:  795:// N.B. these _GLIBCXX_USE_C99_XXX macros are defined unconditionally
        -:  796:// so they should be tested with #if not with #ifdef.
        -:  797:#if __cplusplus >= 201103L
        -:  798:# ifndef _GLIBCXX_USE_C99_MATH
        -:  799:#  define _GLIBCXX_USE_C99_MATH _GLIBCXX11_USE_C99_MATH
        -:  800:# endif
        -:  801:# ifndef _GLIBCXX_USE_C99_COMPLEX
        -:  802:# define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX11_USE_C99_COMPLEX
        -:  803:# endif
        -:  804:# ifndef _GLIBCXX_USE_C99_STDIO
        -:  805:# define _GLIBCXX_USE_C99_STDIO _GLIBCXX11_USE_C99_STDIO
        -:  806:# endif
        -:  807:# ifndef _GLIBCXX_USE_C99_STDLIB
        -:  808:# define _GLIBCXX_USE_C99_STDLIB _GLIBCXX11_USE_C99_STDLIB
        -:  809:# endif
        -:  810:# ifndef _GLIBCXX_USE_C99_WCHAR
        -:  811:# define _GLIBCXX_USE_C99_WCHAR _GLIBCXX11_USE_C99_WCHAR
        -:  812:# endif
        -:  813:#else
        -:  814:# ifndef _GLIBCXX_USE_C99_MATH
        -:  815:#  define _GLIBCXX_USE_C99_MATH _GLIBCXX98_USE_C99_MATH
        -:  816:# endif
        -:  817:# ifndef _GLIBCXX_USE_C99_COMPLEX
        -:  818:# define _GLIBCXX_USE_C99_COMPLEX _GLIBCXX98_USE_C99_COMPLEX
        -:  819:# endif
        -:  820:# ifndef _GLIBCXX_USE_C99_STDIO
        -:  821:# define _GLIBCXX_USE_C99_STDIO _GLIBCXX98_USE_C99_STDIO
        -:  822:# endif
        -:  823:# ifndef _GLIBCXX_USE_C99_STDLIB
        -:  824:# define _GLIBCXX_USE_C99_STDLIB _GLIBCXX98_USE_C99_STDLIB
        -:  825:# endif
        -:  826:# ifndef _GLIBCXX_USE_C99_WCHAR
        -:  827:# define _GLIBCXX_USE_C99_WCHAR _GLIBCXX98_USE_C99_WCHAR
        -:  828:# endif
        -:  829:#endif
        -:  830:
        -:  831:// Unless explicitly specified, enable char8_t extensions only if the core
        -:  832:// language char8_t feature macro is defined.
        -:  833:#ifndef _GLIBCXX_USE_CHAR8_T
        -:  834:# ifdef __cpp_char8_t
        -:  835:#  define _GLIBCXX_USE_CHAR8_T 1
        -:  836:# endif
        -:  837:#endif
        -:  838:#ifdef _GLIBCXX_USE_CHAR8_T
        -:  839:# define __cpp_lib_char8_t 201907L
        -:  840:#endif
        -:  841:
        -:  842:/* Define if __float128 is supported on this host.  */
        -:  843:#if defined(__FLOAT128__) || defined(__SIZEOF_FLOAT128__)
        -:  844:/* For powerpc64 don't use __float128 when it's the same type as long double. */
        -:  845:# if !(defined(_GLIBCXX_LONG_DOUBLE_ALT128_COMPAT) && defined(__LONG_DOUBLE_IEEE128__))
        -:  846:#  define _GLIBCXX_USE_FLOAT128 1
        -:  847:# endif
        -:  848:#endif
        -:  849:
        -:  850:#if __FLT_MANT_DIG__ == 24 \
        -:  851:  && __FLT_MIN_EXP__ == -125 \
        -:  852:  && __FLT_MAX_EXP__ == 128
        -:  853:// Define if float has the IEEE binary32 format.
        -:  854:# define _GLIBCXX_FLOAT_IS_IEEE_BINARY32 1
        -:  855:#endif
        -:  856:
        -:  857:#if __DBL_MANT_DIG__ == 53 \
        -:  858:  && __DBL_MIN_EXP__ == -1021 \
        -:  859:  && __DBL_MAX_EXP__ == 1024
        -:  860:// Define if double has the IEEE binary64 format.
        -:  861:# define _GLIBCXX_DOUBLE_IS_IEEE_BINARY64 1
        -:  862:#elif __FLT_MANT_DIG__ == 24 \
        -:  863:  && __FLT_MIN_EXP__ == -125 \
        -:  864:  && __FLT_MAX_EXP__ == 128
        -:  865:// Define if double has the IEEE binary32 format.
        -:  866:# define _GLIBCXX_DOUBLE_IS_IEEE_BINARY32 1
        -:  867:#endif
        -:  868:
        -:  869:#if __LDBL_MANT_DIG__ == 113 \
        -:  870:  && __LDBL_MIN_EXP__ == -16381 \
        -:  871:  && __LDBL_MAX_EXP__ == 16384
        -:  872:// Define if long double has the IEEE binary128 format.
        -:  873:# define _GLIBCXX_LDOUBLE_IS_IEEE_BINARY128 1
        -:  874:#elif __LDBL_MANT_DIG__ == 53 \
        -:  875:  && __LDBL_MIN_EXP__ == -1021 \
        -:  876:  && __LDBL_MAX_EXP__ == 1024
        -:  877:// Define if long double has the IEEE binary64 format.
        -:  878:# define _GLIBCXX_LDOUBLE_IS_IEEE_BINARY64 1
        -:  879:#elif __LDBL_MANT_DIG__ == 24 \
        -:  880:  && __LDBL_MIN_EXP__ == -125 \
        -:  881:  && __LDBL_MAX_EXP__ == 128
        -:  882:// Define if long double has the IEEE binary32 format.
        -:  883:# define _GLIBCXX_LDOUBLE_IS_IEEE_BINARY32 1
        -:  884:#endif
        -:  885:
        -:  886:#if defined __cplusplus && defined __BFLT16_DIG__
        -:  887:namespace __gnu_cxx
        -:  888:{
        -:  889:  typedef __decltype(0.0bf16) __bfloat16_t;
        -:  890:}
        -:  891:#endif
        -:  892:
        -:  893:#ifdef __has_builtin
        -:  894:# ifdef __is_identifier
        -:  895:// Intel and older Clang require !__is_identifier for some built-ins:
        -:  896:#  define _GLIBCXX_HAS_BUILTIN(B) (__has_builtin(B) || ! __is_identifier(B))
        -:  897:# else
        -:  898:#  define _GLIBCXX_HAS_BUILTIN(B) __has_builtin(B)
        -:  899:# endif
        -:  900:#endif
        -:  901:
        -:  902:#if _GLIBCXX_HAS_BUILTIN(__has_unique_object_representations)
        -:  903:# define _GLIBCXX_HAVE_BUILTIN_HAS_UNIQ_OBJ_REP 1
        -:  904:#endif
        -:  905:
        -:  906:#if _GLIBCXX_HAS_BUILTIN(__is_aggregate)
        -:  907:# define _GLIBCXX_HAVE_BUILTIN_IS_AGGREGATE 1
        -:  908:#endif
        -:  909:
        -:  910:#if _GLIBCXX_HAS_BUILTIN(__builtin_launder)
        -:  911:# define _GLIBCXX_HAVE_BUILTIN_LAUNDER 1
        -:  912:#endif
        -:  913:
        -:  914:// Returns 1 if _GLIBCXX_DO_NOT_USE_BUILTIN_TRAITS is not defined and the
        -:  915:// compiler has a corresponding built-in type trait, 0 otherwise.
        -:  916:// _GLIBCXX_DO_NOT_USE_BUILTIN_TRAITS can be defined to disable the use of
        -:  917:// built-in traits.
        -:  918:#ifndef _GLIBCXX_DO_NOT_USE_BUILTIN_TRAITS
        -:  919:# define _GLIBCXX_USE_BUILTIN_TRAIT(BT) _GLIBCXX_HAS_BUILTIN(BT)
        -:  920:#else
        -:  921:# define _GLIBCXX_USE_BUILTIN_TRAIT(BT) 0
        -:  922:#endif
        -:  923:
        -:  924:// Mark code that should be ignored by the compiler, but seen by Doxygen.
        -:  925:#define _GLIBCXX_DOXYGEN_ONLY(X)
        -:  926:
        -:  927:// PSTL configuration
        -:  928:
        -:  929:#if __cplusplus >= 201703L
        -:  930:// This header is not installed for freestanding:
        -:  931:#if __has_include(<pstl/pstl_config.h>)
        -:  932:// Preserved here so we have some idea which version of upstream we've pulled in
        -:  933:// #define PSTL_VERSION 9000
        -:  934:
        -:  935:// For now this defaults to being based on the presence of Thread Building Blocks
        -:  936:# ifndef _GLIBCXX_USE_TBB_PAR_BACKEND
        -:  937:#  define _GLIBCXX_USE_TBB_PAR_BACKEND __has_include(<tbb/tbb.h>)
        -:  938:# endif
        -:  939:// This section will need some rework when a new (default) backend type is added
        -:  940:# if _GLIBCXX_USE_TBB_PAR_BACKEND
        -:  941:#  define _PSTL_PAR_BACKEND_TBB
        -:  942:# else
        -:  943:#  define _PSTL_PAR_BACKEND_SERIAL
        -:  944:# endif
        -:  945:
        -:  946:# define _PSTL_ASSERT(_Condition) __glibcxx_assert(_Condition)
        -:  947:# define _PSTL_ASSERT_MSG(_Condition, _Message) __glibcxx_assert(_Condition)
        -:  948:
        -:  949:#include <pstl/pstl_config.h>
        -:  950:#endif // __has_include
        -:  951:#endif // C++17
        -:  952:
        -:  953:#pragma GCC diagnostic pop
        -:  954:
        -:  955:// End of prewritten config; the settings discovered at configure time follow.
        -:  956:/* config.h.  Generated from config.h.in by configure.  */
        -:  957:/* config.h.in.  Generated from configure.ac by autoheader.  */
        -:  958:
        -:  959:/* Define to 1 if you have the `acosf' function. */
        -:  960:#define _GLIBCXX_HAVE_ACOSF 1
        -:  961:
        -:  962:/* Define to 1 if you have the `acosl' function. */
        -:  963:#define _GLIBCXX_HAVE_ACOSL 1
        -:  964:
        -:  965:/* Define to 1 if you have the `aligned_alloc' function. */
        -:  966:/* #undef _GLIBCXX_HAVE_ALIGNED_ALLOC */
        -:  967:
        -:  968:/* Define if arc4random is available in <stdlib.h>. */
        -:  969:/* #undef _GLIBCXX_HAVE_ARC4RANDOM */
        -:  970:
        -:  971:/* Define to 1 if you have the <arpa/inet.h> header file. */
        -:  972:/* #undef _GLIBCXX_HAVE_ARPA_INET_H */
        -:  973:
        -:  974:/* Define to 1 if you have the `asinf' function. */
        -:  975:#define _GLIBCXX_HAVE_ASINF 1
        -:  976:
        -:  977:/* Define to 1 if you have the `asinl' function. */
        -:  978:#define _GLIBCXX_HAVE_ASINL 1
        -:  979:
        -:  980:/* Define to 1 if the target assembler supports .symver directive. */
        -:  981:/* #undef _GLIBCXX_HAVE_AS_SYMVER_DIRECTIVE */
        -:  982:
        -:  983:/* Define to 1 if you have the `atan2f' function. */
        -:  984:#define _GLIBCXX_HAVE_ATAN2F 1
        -:  985:
        -:  986:/* Define to 1 if you have the `atan2l' function. */
        -:  987:#define _GLIBCXX_HAVE_ATAN2L 1
        -:  988:
        -:  989:/* Define to 1 if you have the `atanf' function. */
        -:  990:#define _GLIBCXX_HAVE_ATANF 1
        -:  991:
        -:  992:/* Define to 1 if you have the `atanl' function. */
        -:  993:#define _GLIBCXX_HAVE_ATANL 1
        -:  994:
        -:  995:/* Defined if shared_ptr reference counting should use atomic operations. */
        -:  996:#define _GLIBCXX_HAVE_ATOMIC_LOCK_POLICY 1
        -:  997:
        -:  998:/* Define to 1 if you have the `at_quick_exit' function. */
        -:  999:#define _GLIBCXX_HAVE_AT_QUICK_EXIT 1
        -: 1000:
        -: 1001:/* Define if C99 float_t and double_t in <math.h> should be imported in
        -: 1002:   <cmath> in namespace std for C++11. */
        -: 1003:#define _GLIBCXX_HAVE_C99_FLT_EVAL_TYPES 1
        -: 1004:
        -: 1005:/* Define to 1 if the target assembler supports thread-local storage. */
        -: 1006:/* #undef _GLIBCXX_HAVE_CC_TLS */
        -: 1007:
        -: 1008:/* Define to 1 if you have the `ceilf' function. */
        -: 1009:#define _GLIBCXX_HAVE_CEILF 1
        -: 1010:
        -: 1011:/* Define to 1 if you have the `ceill' function. */
        -: 1012:#define _GLIBCXX_HAVE_CEILL 1
        -: 1013:
        -: 1014:/* Define to 1 if you have the <complex.h> header file. */
        -: 1015:#define _GLIBCXX_HAVE_COMPLEX_H 1
        -: 1016:
        -: 1017:/* Define to 1 if you have the `cosf' function. */
        -: 1018:#define _GLIBCXX_HAVE_COSF 1
        -: 1019:
        -: 1020:/* Define to 1 if you have the `coshf' function. */
        -: 1021:#define _GLIBCXX_HAVE_COSHF 1
        -: 1022:
        -: 1023:/* Define to 1 if you have the `coshl' function. */
        -: 1024:#define _GLIBCXX_HAVE_COSHL 1
        -: 1025:
        -: 1026:/* Define to 1 if you have the `cosl' function. */
        -: 1027:#define _GLIBCXX_HAVE_COSL 1
        -: 1028:
        -: 1029:/* Define to 1 if you have the declaration of `strnlen', and to 0 if you
        -: 1030:   don't. */
        -: 1031:#define _GLIBCXX_HAVE_DECL_STRNLEN 1
        -: 1032:
        -: 1033:/* Define to 1 if you have the <dirent.h> header file. */
        -: 1034:#define _GLIBCXX_HAVE_DIRENT_H 1
        -: 1035:
        -: 1036:/* Define if dirfd is available in <dirent.h>. */
        -: 1037:/* #undef _GLIBCXX_HAVE_DIRFD */
        -: 1038:
        -: 1039:/* Define to 1 if you have the <dlfcn.h> header file. */
        -: 1040:/* #undef _GLIBCXX_HAVE_DLFCN_H */
        -: 1041:
        -: 1042:/* Define to 1 if you have the <endian.h> header file. */
        -: 1043:/* #undef _GLIBCXX_HAVE_ENDIAN_H */
        -: 1044:
        -: 1045:/* Define to 1 if GCC 4.6 supported std::exception_ptr for the target */
        -: 1046:/* #undef _GLIBCXX_HAVE_EXCEPTION_PTR_SINCE_GCC46 */
        -: 1047:
        -: 1048:/* Define to 1 if you have the <execinfo.h> header file. */
        -: 1049:/* #undef _GLIBCXX_HAVE_EXECINFO_H */
        -: 1050:
        -: 1051:/* Define to 1 if you have the `expf' function. */
        -: 1052:#define _GLIBCXX_HAVE_EXPF 1
        -: 1053:
        -: 1054:/* Define to 1 if you have the `expl' function. */
        -: 1055:#define _GLIBCXX_HAVE_EXPL 1
        -: 1056:
        -: 1057:/* Define to 1 if you have the `fabsf' function. */
        -: 1058:#define _GLIBCXX_HAVE_FABSF 1
        -: 1059:
        -: 1060:/* Define to 1 if you have the `fabsl' function. */
        -: 1061:#define _GLIBCXX_HAVE_FABSL 1
        -: 1062:
        -: 1063:/* Define to 1 if you have the <fcntl.h> header file. */
        -: 1064:#define _GLIBCXX_HAVE_FCNTL_H 1
        -: 1065:
        -: 1066:/* Define if fdopendir is available in <dirent.h>. */
        -: 1067:/* #undef _GLIBCXX_HAVE_FDOPENDIR */
        -: 1068:
        -: 1069:/* Define to 1 if you have the <fenv.h> header file. */
        -: 1070:#define _GLIBCXX_HAVE_FENV_H 1
        -: 1071:
        -: 1072:/* Define to 1 if you have the `finite' function. */
        -: 1073:#define _GLIBCXX_HAVE_FINITE 1
        -: 1074:
        -: 1075:/* Define to 1 if you have the `finitef' function. */
        -: 1076:/* #undef _GLIBCXX_HAVE_FINITEF */
        -: 1077:
        -: 1078:/* Define to 1 if you have the `finitel' function. */
        -: 1079:/* #undef _GLIBCXX_HAVE_FINITEL */
        -: 1080:
        -: 1081:/* Define to 1 if you have the <float.h> header file. */
        -: 1082:#define _GLIBCXX_HAVE_FLOAT_H 1
        -: 1083:
        -: 1084:/* Define to 1 if you have the `floorf' function. */
        -: 1085:#define _GLIBCXX_HAVE_FLOORF 1
        -: 1086:
        -: 1087:/* Define to 1 if you have the `floorl' function. */
        -: 1088:#define _GLIBCXX_HAVE_FLOORL 1
        -: 1089:
        -: 1090:/* Define to 1 if you have the `fmodf' function. */
        -: 1091:#define _GLIBCXX_HAVE_FMODF 1
        -: 1092:
        -: 1093:/* Define to 1 if you have the `fmodl' function. */
        -: 1094:#define _GLIBCXX_HAVE_FMODL 1
        -: 1095:
        -: 1096:/* Define to 1 if you have the `fpclass' function. */
        -: 1097:#define _GLIBCXX_HAVE_FPCLASS 1
        -: 1098:
        -: 1099:/* Define to 1 if you have the <fp.h> header file. */
        -: 1100:/* #undef _GLIBCXX_HAVE_FP_H */
        -: 1101:
        -: 1102:/* Define to 1 if you have the `frexpf' function. */
        -: 1103:#define _GLIBCXX_HAVE_FREXPF 1
        -: 1104:
        -: 1105:/* Define to 1 if you have the `frexpl' function. */
        -: 1106:#define _GLIBCXX_HAVE_FREXPL 1
        -: 1107:
        -: 1108:/* Define if getentropy is available in <unistd.h>. */
        -: 1109:/* #undef _GLIBCXX_HAVE_GETENTROPY */
        -: 1110:
        -: 1111:/* Define if _Unwind_GetIPInfo is available. */
        -: 1112:#define _GLIBCXX_HAVE_GETIPINFO 1
        -: 1113:
        -: 1114:/* Define if gets is available in <stdio.h> before C++14. */
        -: 1115:#define _GLIBCXX_HAVE_GETS 1
        -: 1116:
        -: 1117:/* Define to 1 if you have the `hypot' function. */
        -: 1118:#define _GLIBCXX_HAVE_HYPOT 1
        -: 1119:
        -: 1120:/* Define to 1 if you have the `hypotf' function. */
        -: 1121:#define _GLIBCXX_HAVE_HYPOTF 1
        -: 1122:
        -: 1123:/* Define to 1 if you have the `hypotl' function. */
        -: 1124:#define _GLIBCXX_HAVE_HYPOTL 1
        -: 1125:
        -: 1126:/* Define if you have the iconv() function and it works. */
        -: 1127:#define _GLIBCXX_HAVE_ICONV 1
        -: 1128:
        -: 1129:/* Define to 1 if you have the <ieeefp.h> header file. */
        -: 1130:#define _GLIBCXX_HAVE_IEEEFP_H 1
        -: 1131:
        -: 1132:/* Define to 1 if you have the <inttypes.h> header file. */
        -: 1133:#define _GLIBCXX_HAVE_INTTYPES_H 1
        -: 1134:
        -: 1135:/* Define to 1 if you have the `isinf' function. */
        -: 1136:/* #undef _GLIBCXX_HAVE_ISINF */
        -: 1137:
        -: 1138:/* Define to 1 if you have the `isinff' function. */
        -: 1139:/* #undef _GLIBCXX_HAVE_ISINFF */
        -: 1140:
        -: 1141:/* Define to 1 if you have the `isinfl' function. */
        -: 1142:/* #undef _GLIBCXX_HAVE_ISINFL */
        -: 1143:
        -: 1144:/* Define to 1 if you have the `isnan' function. */
        -: 1145:#define _GLIBCXX_HAVE_ISNAN 1
        -: 1146:
        -: 1147:/* Define to 1 if you have the `isnanf' function. */
        -: 1148:/* #undef _GLIBCXX_HAVE_ISNANF */
        -: 1149:
        -: 1150:/* Define to 1 if you have the `isnanl' function. */
        -: 1151:/* #undef _GLIBCXX_HAVE_ISNANL */
        -: 1152:
        -: 1153:/* Defined if iswblank exists. */
        -: 1154:#define _GLIBCXX_HAVE_ISWBLANK 1
        -: 1155:
        -: 1156:/* Define if LC_MESSAGES is available in <locale.h>. */
        -: 1157:/* #undef _GLIBCXX_HAVE_LC_MESSAGES */
        -: 1158:
        -: 1159:/* Define to 1 if you have the `ldexpf' function. */
        -: 1160:#define _GLIBCXX_HAVE_LDEXPF 1
        -: 1161:
        -: 1162:/* Define to 1 if you have the `ldexpl' function. */
        -: 1163:#define _GLIBCXX_HAVE_LDEXPL 1
        -: 1164:
        -: 1165:/* Define to 1 if you have the <libintl.h> header file. */
        -: 1166:/* #undef _GLIBCXX_HAVE_LIBINTL_H */
        -: 1167:
        -: 1168:/* Only used in build directory testsuite_hooks.h. */
        -: 1169:/* #undef _GLIBCXX_HAVE_LIMIT_AS */
        -: 1170:
        -: 1171:/* Only used in build directory testsuite_hooks.h. */
        -: 1172:/* #undef _GLIBCXX_HAVE_LIMIT_DATA */
        -: 1173:
        -: 1174:/* Only used in build directory testsuite_hooks.h. */
        -: 1175:/* #undef _GLIBCXX_HAVE_LIMIT_FSIZE */
        -: 1176:
        -: 1177:/* Only used in build directory testsuite_hooks.h. */
        -: 1178:/* #undef _GLIBCXX_HAVE_LIMIT_RSS */
        -: 1179:
        -: 1180:/* Only used in build directory testsuite_hooks.h. */
        -: 1181:/* #undef _GLIBCXX_HAVE_LIMIT_VMEM */
        -: 1182:
        -: 1183:/* Define if link is available in <unistd.h>. */
        -: 1184:/* #undef _GLIBCXX_HAVE_LINK */
        -: 1185:
        -: 1186:/* Define to 1 if you have the <link.h> header file. */
        -: 1187:/* #undef _GLIBCXX_HAVE_LINK_H */
        -: 1188:
        -: 1189:/* Define if futex syscall is available. */
        -: 1190:/* #undef _GLIBCXX_HAVE_LINUX_FUTEX */
        -: 1191:
        -: 1192:/* Define to 1 if you have the <linux/random.h> header file. */
        -: 1193:/* #undef _GLIBCXX_HAVE_LINUX_RANDOM_H */
        -: 1194:
        -: 1195:/* Define to 1 if you have the <linux/types.h> header file. */
        -: 1196:/* #undef _GLIBCXX_HAVE_LINUX_TYPES_H */
        -: 1197:
        -: 1198:/* Define to 1 if you have the <locale.h> header file. */
        -: 1199:#define _GLIBCXX_HAVE_LOCALE_H 1
        -: 1200:
        -: 1201:/* Define to 1 if you have the `log10f' function. */
        -: 1202:#define _GLIBCXX_HAVE_LOG10F 1
        -: 1203:
        -: 1204:/* Define to 1 if you have the `log10l' function. */
        -: 1205:#define _GLIBCXX_HAVE_LOG10L 1
        -: 1206:
        -: 1207:/* Define to 1 if you have the `logf' function. */
        -: 1208:#define _GLIBCXX_HAVE_LOGF 1
        -: 1209:
        -: 1210:/* Define to 1 if you have the `logl' function. */
        -: 1211:#define _GLIBCXX_HAVE_LOGL 1
        -: 1212:
        -: 1213:/* Define if lseek is available in <unistd.h>. */
        -: 1214:#define _GLIBCXX_HAVE_LSEEK 1
        -: 1215:
        -: 1216:/* Define to 1 if you have the <machine/endian.h> header file. */
        -: 1217:/* #undef _GLIBCXX_HAVE_MACHINE_ENDIAN_H */
        -: 1218:
        -: 1219:/* Define to 1 if you have the <machine/param.h> header file. */
        -: 1220:/* #undef _GLIBCXX_HAVE_MACHINE_PARAM_H */
        -: 1221:
        -: 1222:/* Define if mbstate_t exists in wchar.h. */
        -: 1223:#define _GLIBCXX_HAVE_MBSTATE_T 1
        -: 1224:
        -: 1225:/* Define to 1 if you have the `memalign' function. */
        -: 1226:/* #undef _GLIBCXX_HAVE_MEMALIGN */
        -: 1227:
        -: 1228:/* Define to 1 if you have the <memory.h> header file. */
        -: 1229:#define _GLIBCXX_HAVE_MEMORY_H 1
        -: 1230:
        -: 1231:/* Define to 1 if you have the `modf' function. */
        -: 1232:#define _GLIBCXX_HAVE_MODF 1
        -: 1233:
        -: 1234:/* Define to 1 if you have the `modff' function. */
        -: 1235:#define _GLIBCXX_HAVE_MODFF 1
        -: 1236:
        -: 1237:/* Define to 1 if you have the `modfl' function. */
        -: 1238:#define _GLIBCXX_HAVE_MODFL 1
        -: 1239:
        -: 1240:/* Define to 1 if you have the <nan.h> header file. */
        -: 1241:/* #undef _GLIBCXX_HAVE_NAN_H */
        -: 1242:
        -: 1243:/* Define to 1 if you have the <netdb.h> header file. */
        -: 1244:/* #undef _GLIBCXX_HAVE_NETDB_H */
        -: 1245:
        -: 1246:/* Define to 1 if you have the <netinet/in.h> header file. */
        -: 1247:/* #undef _GLIBCXX_HAVE_NETINET_IN_H */
        -: 1248:
        -: 1249:/* Define to 1 if you have the <netinet/tcp.h> header file. */
        -: 1250:/* #undef _GLIBCXX_HAVE_NETINET_TCP_H */
        -: 1251:
        -: 1252:/* Define if <math.h> defines obsolete isinf function. */
        -: 1253:/* #undef _GLIBCXX_HAVE_OBSOLETE_ISINF */
        -: 1254:
        -: 1255:/* Define if <math.h> defines obsolete isnan function. */
        -: 1256:/* #undef _GLIBCXX_HAVE_OBSOLETE_ISNAN */
        -: 1257:
        -: 1258:/* Define if openat is available in <fcntl.h>. */
        -: 1259:/* #undef _GLIBCXX_HAVE_OPENAT */
        -: 1260:
        -: 1261:/* Define if O_NONBLOCK is defined in <fcntl.h> */
        -: 1262:/* #undef _GLIBCXX_HAVE_O_NONBLOCK */
        -: 1263:
        -: 1264:/* Define if poll is available in <poll.h>. */
        -: 1265:/* #undef _GLIBCXX_HAVE_POLL */
        -: 1266:
        -: 1267:/* Define to 1 if you have the <poll.h> header file. */
        -: 1268:/* #undef _GLIBCXX_HAVE_POLL_H */
        -: 1269:
        -: 1270:/* Define to 1 if you have the `posix_memalign' function. */
        -: 1271:/* #undef _GLIBCXX_HAVE_POSIX_MEMALIGN */
        -: 1272:
        -: 1273:/* Define to 1 if POSIX Semaphores with sem_timedwait are available in
        -: 1274:   <semaphore.h>. */
        -: 1275:#define _GLIBCXX_HAVE_POSIX_SEMAPHORE 1
        -: 1276:
        -: 1277:/* Define to 1 if you have the `powf' function. */
        -: 1278:#define _GLIBCXX_HAVE_POWF 1
        -: 1279:
        -: 1280:/* Define to 1 if you have the `powl' function. */
        -: 1281:#define _GLIBCXX_HAVE_POWL 1
        -: 1282:
        -: 1283:/* Define to 1 if you have the `qfpclass' function. */
        -: 1284:/* #undef _GLIBCXX_HAVE_QFPCLASS */
        -: 1285:
        -: 1286:/* Define to 1 if you have the `quick_exit' function. */
        -: 1287:#define _GLIBCXX_HAVE_QUICK_EXIT 1
        -: 1288:
        -: 1289:/* Define if readlink is available in <unistd.h>. */
        -: 1290:/* #undef _GLIBCXX_HAVE_READLINK */
        -: 1291:
        -: 1292:/* Define to 1 if you have the `secure_getenv' function. */
        -: 1293:/* #undef _GLIBCXX_HAVE_SECURE_GETENV */
        -: 1294:
        -: 1295:/* Define to 1 if you have the `setenv' function. */
        -: 1296:/* #undef _GLIBCXX_HAVE_SETENV */
        -: 1297:
        -: 1298:/* Define to 1 if you have the `sincos' function. */
        -: 1299:#define _GLIBCXX_HAVE_SINCOS 1
        -: 1300:
        -: 1301:/* Define to 1 if you have the `sincosf' function. */
        -: 1302:#define _GLIBCXX_HAVE_SINCOSF 1
        -: 1303:
        -: 1304:/* Define to 1 if you have the `sincosl' function. */
        -: 1305:#define _GLIBCXX_HAVE_SINCOSL 1
        -: 1306:
        -: 1307:/* Define to 1 if you have the `sinf' function. */
        -: 1308:#define _GLIBCXX_HAVE_SINF 1
        -: 1309:
        -: 1310:/* Define to 1 if you have the `sinhf' function. */
        -: 1311:#define _GLIBCXX_HAVE_SINHF 1
        -: 1312:
        -: 1313:/* Define to 1 if you have the `sinhl' function. */
        -: 1314:#define _GLIBCXX_HAVE_SINHL 1
        -: 1315:
        -: 1316:/* Define to 1 if you have the `sinl' function. */
        -: 1317:#define _GLIBCXX_HAVE_SINL 1
        -: 1318:
        -: 1319:/* Defined if sleep exists. */
        -: 1320:/* #undef _GLIBCXX_HAVE_SLEEP */
        -: 1321:
        -: 1322:/* Define to 1 if you have the `sockatmark' function. */
        -: 1323:/* #undef _GLIBCXX_HAVE_SOCKATMARK */
        -: 1324:
        -: 1325:/* Define to 1 if you have the `sqrtf' function. */
        -: 1326:#define _GLIBCXX_HAVE_SQRTF 1
        -: 1327:
        -: 1328:/* Define to 1 if you have the `sqrtl' function. */
        -: 1329:#define _GLIBCXX_HAVE_SQRTL 1
        -: 1330:
        -: 1331:/* Define if the <stacktrace> header is supported. */
        -: 1332:#define _GLIBCXX_HAVE_STACKTRACE 1
        -: 1333:
        -: 1334:/* Define to 1 if you have the <stdalign.h> header file. */
        -: 1335:#define _GLIBCXX_HAVE_STDALIGN_H 1
        -: 1336:
        -: 1337:/* Define to 1 if you have the <stdbool.h> header file. */
        -: 1338:#define _GLIBCXX_HAVE_STDBOOL_H 1
        -: 1339:
        -: 1340:/* Define to 1 if you have the <stdint.h> header file. */
        -: 1341:#define _GLIBCXX_HAVE_STDINT_H 1
        -: 1342:
        -: 1343:/* Define to 1 if you have the <stdlib.h> header file. */
        -: 1344:#define _GLIBCXX_HAVE_STDLIB_H 1
        -: 1345:
        -: 1346:/* Define if strerror_l is available in <string.h>. */
        -: 1347:/* #undef _GLIBCXX_HAVE_STRERROR_L */
        -: 1348:
        -: 1349:/* Define if strerror_r is available in <string.h>. */
        -: 1350:/* #undef _GLIBCXX_HAVE_STRERROR_R */
        -: 1351:
        -: 1352:/* Define to 1 if you have the <strings.h> header file. */
        -: 1353:#define _GLIBCXX_HAVE_STRINGS_H 1
        -: 1354:
        -: 1355:/* Define to 1 if you have the <string.h> header file. */
        -: 1356:#define _GLIBCXX_HAVE_STRING_H 1
        -: 1357:
        -: 1358:/* Define to 1 if you have the `strtof' function. */
        -: 1359:#define _GLIBCXX_HAVE_STRTOF 1
        -: 1360:
        -: 1361:/* Define to 1 if you have the `strtold' function. */
        -: 1362:#define _GLIBCXX_HAVE_STRTOLD 1
        -: 1363:
        -: 1364:/* Define to 1 if `d_type' is a member of `struct dirent'. */
        -: 1365:/* #undef _GLIBCXX_HAVE_STRUCT_DIRENT_D_TYPE */
        -: 1366:
        -: 1367:/* Define if strxfrm_l is available in <string.h>. */
        -: 1368:/* #undef _GLIBCXX_HAVE_STRXFRM_L */
        -: 1369:
        -: 1370:/* Define if symlink is available in <unistd.h>. */
        -: 1371:/* #undef _GLIBCXX_HAVE_SYMLINK */
        -: 1372:
        -: 1373:/* Define to 1 if the target runtime linker supports binding the same symbol
        -: 1374:   to different versions. */
        -: 1375:/* #undef _GLIBCXX_HAVE_SYMVER_SYMBOL_RENAMING_RUNTIME_SUPPORT */
        -: 1376:
        -: 1377:/* Define to 1 if you have the <sys/filio.h> header file. */
        -: 1378:/* #undef _GLIBCXX_HAVE_SYS_FILIO_H */
        -: 1379:
        -: 1380:/* Define to 1 if you have the <sys/ioctl.h> header file. */
        -: 1381:/* #undef _GLIBCXX_HAVE_SYS_IOCTL_H */
        -: 1382:
        -: 1383:/* Define to 1 if you have the <sys/ipc.h> header file. */
        -: 1384:/* #undef _GLIBCXX_HAVE_SYS_IPC_H */
        -: 1385:
        -: 1386:/* Define to 1 if you have the <sys/isa_defs.h> header file. */
        -: 1387:/* #undef _GLIBCXX_HAVE_SYS_ISA_DEFS_H */
        -: 1388:
        -: 1389:/* Define to 1 if you have the <sys/machine.h> header file. */
        -: 1390:/* #undef _GLIBCXX_HAVE_SYS_MACHINE_H */
        -: 1391:
        -: 1392:/* Define to 1 if you have the <sys/mman.h> header file. */
        -: 1393:/* #undef _GLIBCXX_HAVE_SYS_MMAN_H */
        -: 1394:
        -: 1395:/* Define to 1 if you have the <sys/param.h> header file. */
        -: 1396:#define _GLIBCXX_HAVE_SYS_PARAM_H 1
        -: 1397:
        -: 1398:/* Define to 1 if you have the <sys/resource.h> header file. */
        -: 1399:/* #undef _GLIBCXX_HAVE_SYS_RESOURCE_H */
        -: 1400:
        -: 1401:/* Define to 1 if you have a suitable <sys/sdt.h> header file */
        -: 1402:/* #undef _GLIBCXX_HAVE_SYS_SDT_H */
        -: 1403:
        -: 1404:/* Define to 1 if you have the <sys/sem.h> header file. */
        -: 1405:/* #undef _GLIBCXX_HAVE_SYS_SEM_H */
        -: 1406:
        -: 1407:/* Define to 1 if you have the <sys/socket.h> header file. */
        -: 1408:/* #undef _GLIBCXX_HAVE_SYS_SOCKET_H */
        -: 1409:
        -: 1410:/* Define to 1 if you have the <sys/statvfs.h> header file. */
        -: 1411:/* #undef _GLIBCXX_HAVE_SYS_STATVFS_H */
        -: 1412:
        -: 1413:/* Define to 1 if you have the <sys/stat.h> header file. */
        -: 1414:#define _GLIBCXX_HAVE_SYS_STAT_H 1
        -: 1415:
        -: 1416:/* Define to 1 if you have the <sys/sysinfo.h> header file. */
        -: 1417:/* #undef _GLIBCXX_HAVE_SYS_SYSINFO_H */
        -: 1418:
        -: 1419:/* Define to 1 if you have the <sys/time.h> header file. */
        -: 1420:#define _GLIBCXX_HAVE_SYS_TIME_H 1
        -: 1421:
        -: 1422:/* Define to 1 if you have the <sys/types.h> header file. */
        -: 1423:#define _GLIBCXX_HAVE_SYS_TYPES_H 1
        -: 1424:
        -: 1425:/* Define to 1 if you have the <sys/uio.h> header file. */
        -: 1426:/* #undef _GLIBCXX_HAVE_SYS_UIO_H */
        -: 1427:
        -: 1428:/* Define if S_IFREG is available in <sys/stat.h>. */
        -: 1429:/* #undef _GLIBCXX_HAVE_S_IFREG */
        -: 1430:
        -: 1431:/* Define if S_ISREG is available in <sys/stat.h>. */
        -: 1432:#define _GLIBCXX_HAVE_S_ISREG 1
        -: 1433:
        -: 1434:/* Define to 1 if you have the `tanf' function. */
        -: 1435:#define _GLIBCXX_HAVE_TANF 1
        -: 1436:
        -: 1437:/* Define to 1 if you have the `tanhf' function. */
        -: 1438:#define _GLIBCXX_HAVE_TANHF 1
        -: 1439:
        -: 1440:/* Define to 1 if you have the `tanhl' function. */
        -: 1441:#define _GLIBCXX_HAVE_TANHL 1
        -: 1442:
        -: 1443:/* Define to 1 if you have the `tanl' function. */
        -: 1444:#define _GLIBCXX_HAVE_TANL 1
        -: 1445:
        -: 1446:/* Define to 1 if you have the <tgmath.h> header file. */
        -: 1447:#define _GLIBCXX_HAVE_TGMATH_H 1
        -: 1448:
        -: 1449:/* Define to 1 if you have the `timespec_get' function. */
        -: 1450:#define _GLIBCXX_HAVE_TIMESPEC_GET 1
        -: 1451:
        -: 1452:/* Define to 1 if you have the <tlhelp32.h> header file. */
        -: 1453:#define _GLIBCXX_HAVE_TLHELP32_H 1
        -: 1454:
        -: 1455:/* Define to 1 if the target supports thread-local storage. */
        -: 1456:#define _GLIBCXX_HAVE_TLS 1
        -: 1457:
        -: 1458:/* Define if truncate is available in <unistd.h>. */
        -: 1459:#define _GLIBCXX_HAVE_TRUNCATE 1
        -: 1460:
        -: 1461:/* Define to 1 if you have the <uchar.h> header file. */
        -: 1462:#define _GLIBCXX_HAVE_UCHAR_H 1
        -: 1463:
        -: 1464:/* Define to 1 if you have the <unistd.h> header file. */
        -: 1465:#define _GLIBCXX_HAVE_UNISTD_H 1
        -: 1466:
        -: 1467:/* Define if unlinkat is available in <fcntl.h>. */
        -: 1468:/* #undef _GLIBCXX_HAVE_UNLINKAT */
        -: 1469:
        -: 1470:/* Define to 1 if you have the `uselocale' function. */
        -: 1471:/* #undef _GLIBCXX_HAVE_USELOCALE */
        -: 1472:
        -: 1473:/* Defined if usleep exists. */
        -: 1474:/* #undef _GLIBCXX_HAVE_USLEEP */
        -: 1475:
        -: 1476:/* Define to 1 if you have the <utime.h> header file. */
        -: 1477:#define _GLIBCXX_HAVE_UTIME_H 1
        -: 1478:
        -: 1479:/* Defined if vfwscanf exists. */
        -: 1480:#define _GLIBCXX_HAVE_VFWSCANF 1
        -: 1481:
        -: 1482:/* Defined if vswscanf exists. */
        -: 1483:#define _GLIBCXX_HAVE_VSWSCANF 1
        -: 1484:
        -: 1485:/* Defined if vwscanf exists. */
        -: 1486:#define _GLIBCXX_HAVE_VWSCANF 1
        -: 1487:
        -: 1488:/* Define to 1 if you have the <wchar.h> header file. */
        -: 1489:#define _GLIBCXX_HAVE_WCHAR_H 1
        -: 1490:
        -: 1491:/* Defined if wcstof exists. */
        -: 1492:#define _GLIBCXX_HAVE_WCSTOF 1
        -: 1493:
        -: 1494:/* Define to 1 if you have the <wctype.h> header file. */
        -: 1495:#define _GLIBCXX_HAVE_WCTYPE_H 1
        -: 1496:
        -: 1497:/* Define to 1 if you have the <windows.h> header file. */
        -: 1498:#define _GLIBCXX_HAVE_WINDOWS_H 1
        -: 1499:
        -: 1500:/* Define if writev is available in <sys/uio.h>. */
        -: 1501:/* #undef _GLIBCXX_HAVE_WRITEV */
        -: 1502:
        -: 1503:/* Define to 1 if you have the <xlocale.h> header file. */
        -: 1504:/* #undef _GLIBCXX_HAVE_XLOCALE_H */
        -: 1505:
        -: 1506:/* Define to 1 if you have the `_aligned_malloc' function. */
        -: 1507:#define _GLIBCXX_HAVE__ALIGNED_MALLOC 1
        -: 1508:
        -: 1509:/* Define to 1 if you have the `_wfopen' function. */
        -: 1510:#define _GLIBCXX_HAVE__WFOPEN 1
        -: 1511:
        -: 1512:/* Define to 1 if you have the `__cxa_thread_atexit' function. */
        -: 1513:#define _GLIBCXX_HAVE___CXA_THREAD_ATEXIT 1
        -: 1514:
        -: 1515:/* Define to 1 if you have the `__cxa_thread_atexit_impl' function. */
        -: 1516:/* #undef _GLIBCXX_HAVE___CXA_THREAD_ATEXIT_IMPL */
        -: 1517:
        -: 1518:/* Define as const if the declaration of iconv() needs const. */
        -: 1519:#define _GLIBCXX_ICONV_CONST 
        -: 1520:
        -: 1521:/* Define to the sub-directory in which libtool stores uninstalled libraries.
        -: 1522:   */
        -: 1523:#define _GLIBCXX_LT_OBJDIR ".libs/"
        -: 1524:
        -: 1525:/* Name of package */
        -: 1526:/* #undef _GLIBCXX_PACKAGE */
        -: 1527:
        -: 1528:/* Define to the address where bug reports for this package should be sent. */
        -: 1529:#define _GLIBCXX_PACKAGE_BUGREPORT ""
        -: 1530:
        -: 1531:/* Define to the full name of this package. */
        -: 1532:#define _GLIBCXX_PACKAGE_NAME "package-unused"
        -: 1533:
        -: 1534:/* Define to the full name and version of this package. */
        -: 1535:#define _GLIBCXX_PACKAGE_STRING "package-unused version-unused"
        -: 1536:
        -: 1537:/* Define to the one symbol short name of this package. */
        -: 1538:#define _GLIBCXX_PACKAGE_TARNAME "libstdc++"
        -: 1539:
        -: 1540:/* Define to the home page for this package. */
        -: 1541:#define _GLIBCXX_PACKAGE_URL ""
        -: 1542:
        -: 1543:/* Define to the version of this package. */
        -: 1544:#define _GLIBCXX_PACKAGE__GLIBCXX_VERSION "version-unused"
        -: 1545:
        -: 1546:/* Define to 1 if you have the ANSI C header files. */
        -: 1547:#define _GLIBCXX_STDC_HEADERS 1
        -: 1548:
        -: 1549:/* Version number of package */
        -: 1550:/* #undef _GLIBCXX_VERSION */
        -: 1551:
        -: 1552:/* Enable large inode numbers on Mac OS X 10.5.  */
        -: 1553:#ifndef _GLIBCXX_DARWIN_USE_64_BIT_INODE
        -: 1554:# define _GLIBCXX_DARWIN_USE_64_BIT_INODE 1
        -: 1555:#endif
        -: 1556:
        -: 1557:/* Number of bits in a file offset, on hosts where this is settable. */
        -: 1558:#define _GLIBCXX_FILE_OFFSET_BITS 64
        -: 1559:
        -: 1560:/* Define if C99 functions in <complex.h> should be used in <complex> for
        -: 1561:   C++11. Using compiler builtins for these functions requires corresponding
        -: 1562:   C99 library functions to be present. */
        -: 1563:#define _GLIBCXX11_USE_C99_COMPLEX 1
        -: 1564:
        -: 1565:/* Define if C99 generic macros in <math.h> should be imported in <cmath> in
        -: 1566:   namespace std for C++11. */
        -: 1567:#define _GLIBCXX11_USE_C99_MATH 1
        -: 1568:
        -: 1569:/* Define if C99 functions or macros in <stdio.h> should be imported in
        -: 1570:   <cstdio> in namespace std for C++11. */
        -: 1571:#define _GLIBCXX11_USE_C99_STDIO 1
        -: 1572:
        -: 1573:/* Define if C99 functions or macros in <stdlib.h> should be imported in
        -: 1574:   <cstdlib> in namespace std for C++11. */
        -: 1575:#define _GLIBCXX11_USE_C99_STDLIB 1
        -: 1576:
        -: 1577:/* Define if C99 functions or macros in <wchar.h> should be imported in
        -: 1578:   <cwchar> in namespace std for C++11. */
        -: 1579:#define _GLIBCXX11_USE_C99_WCHAR 1
        -: 1580:
        -: 1581:/* Define if C99 functions in <complex.h> should be used in <complex> for
        -: 1582:   C++98. Using compiler builtins for these functions requires corresponding
        -: 1583:   C99 library functions to be present. */
        -: 1584:#define _GLIBCXX98_USE_C99_COMPLEX 1
        -: 1585:
        -: 1586:/* Define if C99 functions or macros in <math.h> should be imported in <cmath>
        -: 1587:   in namespace std for C++98. */
        -: 1588:#define _GLIBCXX98_USE_C99_MATH 1
        -: 1589:
        -: 1590:/* Define if C99 functions or macros in <stdio.h> should be imported in
        -: 1591:   <cstdio> in namespace std for C++98. */
        -: 1592:#define _GLIBCXX98_USE_C99_STDIO 1
        -: 1593:
        -: 1594:/* Define if C99 functions or macros in <stdlib.h> should be imported in
        -: 1595:   <cstdlib> in namespace std for C++98. */
        -: 1596:#define _GLIBCXX98_USE_C99_STDLIB 1
        -: 1597:
        -: 1598:/* Define if C99 functions or macros in <wchar.h> should be imported in
        -: 1599:   <cwchar> in namespace std for C++98. */
        -: 1600:#define _GLIBCXX98_USE_C99_WCHAR 1
        -: 1601:
        -: 1602:/* Define if the compiler supports C++11 atomics. */
        -: 1603:#define _GLIBCXX_ATOMIC_BUILTINS 1
        -: 1604:
        -: 1605:/* Define if global objects can be aligned to
        -: 1606:   std::hardware_destructive_interference_size. */
        -: 1607:#define _GLIBCXX_CAN_ALIGNAS_DESTRUCTIVE_SIZE 1
        -: 1608:
        -: 1609:/* Define to use concept checking code from the boost libraries. */
        -: 1610:/* #undef _GLIBCXX_CONCEPT_CHECKS */
        -: 1611:
        -: 1612:/* Define to 1 if a fully dynamic basic_string is wanted, 0 to disable,
        -: 1613:   undefined for platform defaults */
        -: 1614:#define _GLIBCXX_FULLY_DYNAMIC_STRING 1
        -: 1615:
        -: 1616:/* Define if gthreads library is available. */
        -: 1617:#define _GLIBCXX_HAS_GTHREADS 1
        -: 1618:
        -: 1619:/* Define to 1 if a full hosted library is built, or 0 if freestanding. */
        -: 1620:#define _GLIBCXX_HOSTED __STDC_HOSTED__
        -: 1621:
        -: 1622:/* Define if compatibility should be provided for alternative 128-bit long
        -: 1623:   double formats. */
        -: 1624:
        -: 1625:/* Define if compatibility should be provided for -mlong-double-64. */
        -: 1626:
        -: 1627:/* Define to the letter to which size_t is mangled. */
        -: 1628:#define _GLIBCXX_MANGLE_SIZE_T y
        -: 1629:
        -: 1630:/* Define if C99 llrint and llround functions are missing from <math.h>. */
        -: 1631:/* #undef _GLIBCXX_NO_C99_ROUNDING_FUNCS */
        -: 1632:
        -: 1633:/* Defined if no way to sleep is available. */
        -: 1634:/* #undef _GLIBCXX_NO_SLEEP */
        -: 1635:
        -: 1636:/* Define if ptrdiff_t is int. */
        -: 1637:/* #undef _GLIBCXX_PTRDIFF_T_IS_INT */
        -: 1638:
        -: 1639:/* Define if using setrlimit to set resource limits during "make check" */
        -: 1640:/* #undef _GLIBCXX_RES_LIMITS */
        -: 1641:
        -: 1642:/* Define if size_t is unsigned int. */
        -: 1643:/* #undef _GLIBCXX_SIZE_T_IS_UINT */
        -: 1644:
        -: 1645:/* Define if static tzdata should be compiled into the library. */
        -: 1646:#define _GLIBCXX_STATIC_TZDATA 1
        -: 1647:
        -: 1648:/* Define to the value of the EOF integer constant. */
        -: 1649:#define _GLIBCXX_STDIO_EOF -1
        -: 1650:
        -: 1651:/* Define to the value of the SEEK_CUR integer constant. */
        -: 1652:#define _GLIBCXX_STDIO_SEEK_CUR 1
        -: 1653:
        -: 1654:/* Define to the value of the SEEK_END integer constant. */
        -: 1655:#define _GLIBCXX_STDIO_SEEK_END 2
        -: 1656:
        -: 1657:/* Define to use symbol versioning in the shared library. */
        -: 1658:/* #undef _GLIBCXX_SYMVER */
        -: 1659:
        -: 1660:/* Define to use darwin versioning in the shared library. */
        -: 1661:/* #undef _GLIBCXX_SYMVER_DARWIN */
        -: 1662:
        -: 1663:/* Define to use GNU versioning in the shared library. */
        -: 1664:/* #undef _GLIBCXX_SYMVER_GNU */
        -: 1665:
        -: 1666:/* Define to use GNU namespace versioning in the shared library. */
        -: 1667:/* #undef _GLIBCXX_SYMVER_GNU_NAMESPACE */
        -: 1668:
        -: 1669:/* Define to use Sun versioning in the shared library. */
        -: 1670:/* #undef _GLIBCXX_SYMVER_SUN */
        -: 1671:
        -: 1672:/* Define if C11 functions in <uchar.h> should be imported into namespace std
        -: 1673:   in <cuchar>. */
        -: 1674:#define _GLIBCXX_USE_C11_UCHAR_CXX11 1
        -: 1675:
        -: 1676:/* Define if C99 functions or macros from <wchar.h>, <math.h>, <complex.h>,
        -: 1677:   <stdio.h>, and <stdlib.h> can be used or exposed. */
        -: 1678:#define _GLIBCXX_USE_C99 1
        -: 1679:
        -: 1680:/* Define if C99 inverse trig functions in <complex.h> should be used in
        -: 1681:   <complex>. Using compiler builtins for these functions requires
        -: 1682:   corresponding C99 library functions to be present. */
        -: 1683:#define _GLIBCXX_USE_C99_COMPLEX_ARC 1
        -: 1684:
        -: 1685:/* Define if C99 functions in <complex.h> should be used in <tr1/complex>.
        -: 1686:   Using compiler builtins for these functions requires corresponding C99
        -: 1687:   library functions to be present. */
        -: 1688:#define _GLIBCXX_USE_C99_COMPLEX_TR1 1
        -: 1689:
        -: 1690:/* Define if C99 functions in <ctype.h> should be imported in <cctype> in
        -: 1691:   namespace std for C++11. */
        -: 1692:#define _GLIBCXX_USE_C99_CTYPE 1
        -: 1693:
        -: 1694:/* Define if C99 functions in <ctype.h> should be imported in <tr1/cctype> in
        -: 1695:   namespace std::tr1. */
        -: 1696:#define _GLIBCXX_USE_C99_CTYPE_TR1 1
        -: 1697:
        -: 1698:/* Define if C99 functions in <fenv.h> should be imported in <cfenv> in
        -: 1699:   namespace std for C++11. */
        -: 1700:#define _GLIBCXX_USE_C99_FENV 1
        -: 1701:
        -: 1702:/* Define if C99 functions in <fenv.h> should be imported in <tr1/cfenv> in
        -: 1703:   namespace std::tr1. */
        -: 1704:#define _GLIBCXX_USE_C99_FENV_TR1 1
        -: 1705:
        -: 1706:/* Define if C99 functions in <inttypes.h> should be imported in <cinttypes>
        -: 1707:   in namespace std in C++11. */
        -: 1708:#define _GLIBCXX_USE_C99_INTTYPES 1
        -: 1709:
        -: 1710:/* Define if C99 functions in <inttypes.h> should be imported in
        -: 1711:   <tr1/cinttypes> in namespace std::tr1. */
        -: 1712:#define _GLIBCXX_USE_C99_INTTYPES_TR1 1
        -: 1713:
        -: 1714:/* Define if wchar_t C99 functions in <inttypes.h> should be imported in
        -: 1715:   <cinttypes> in namespace std in C++11. */
        -: 1716:#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T 1
        -: 1717:
        -: 1718:/* Define if wchar_t C99 functions in <inttypes.h> should be imported in
        -: 1719:   <tr1/cinttypes> in namespace std::tr1. */
        -: 1720:#define _GLIBCXX_USE_C99_INTTYPES_WCHAR_T_TR1 1
        -: 1721:
        -: 1722:/* Define if C99 functions in <math.h> should be imported in <cmath> in
        -: 1723:   namespace std for C++11. */
        -: 1724:#define _GLIBCXX_USE_C99_MATH_FUNCS 1
        -: 1725:
        -: 1726:/* Define if C99 functions or macros in <math.h> should be imported in
        -: 1727:   <tr1/cmath> in namespace std::tr1. */
        -: 1728:#define _GLIBCXX_USE_C99_MATH_TR1 1
        -: 1729:
        -: 1730:/* Define if C99 types in <stdint.h> should be imported in <cstdint> in
        -: 1731:   namespace std for C++11. */
        -: 1732:#define _GLIBCXX_USE_C99_STDINT 1
        -: 1733:
        -: 1734:/* Define if C99 types in <stdint.h> should be imported in <tr1/cstdint> in
        -: 1735:   namespace std::tr1. */
        -: 1736:#define _GLIBCXX_USE_C99_STDINT_TR1 1
        -: 1737:
        -: 1738:/* Define if usable chdir is available in <unistd.h>. */
        -: 1739:#define _GLIBCXX_USE_CHDIR 1
        -: 1740:
        -: 1741:/* Define if usable chmod is available in <sys/stat.h>. */
        -: 1742:#define _GLIBCXX_USE_CHMOD 1
        -: 1743:
        -: 1744:/* Defined if clock_gettime syscall has monotonic and realtime clock support.
        -: 1745:   */
        -: 1746:/* #undef _GLIBCXX_USE_CLOCK_GETTIME_SYSCALL */
        -: 1747:
        -: 1748:/* Defined if clock_gettime has monotonic clock support. */
        -: 1749:#define _GLIBCXX_USE_CLOCK_MONOTONIC 1
        -: 1750:
        -: 1751:/* Defined if clock_gettime has realtime clock support. */
        -: 1752:#define _GLIBCXX_USE_CLOCK_REALTIME 1
        -: 1753:
        -: 1754:/* Define if copy_file_range is available in <unistd.h>. */
        -: 1755:/* #undef _GLIBCXX_USE_COPY_FILE_RANGE */
        -: 1756:
        -: 1757:/* Define if ISO/IEC TR 24733 decimal floating point types are supported on
        -: 1758:   this host. */
        -: 1759:#define _GLIBCXX_USE_DECIMAL_FLOAT 1
        -: 1760:
        -: 1761:/* Define if /dev/random and /dev/urandom are available for
        -: 1762:   std::random_device. */
        -: 1763:/* #undef _GLIBCXX_USE_DEV_RANDOM */
        -: 1764:
        -: 1765:/* Define if fchmod is available in <sys/stat.h>. */
        -: 1766:/* #undef _GLIBCXX_USE_FCHMOD */
        -: 1767:
        -: 1768:/* Define if fchmodat is available in <sys/stat.h>. */
        -: 1769:/* #undef _GLIBCXX_USE_FCHMODAT */
        -: 1770:
        -: 1771:/* Define if fseeko and ftello are available. */
        -: 1772:#define _GLIBCXX_USE_FSEEKO_FTELLO 1
        -: 1773:
        -: 1774:/* Define if usable getcwd is available in <unistd.h>. */
        -: 1775:#define _GLIBCXX_USE_GETCWD 1
        -: 1776:
        -: 1777:/* Defined if gettimeofday is available. */
        -: 1778:#define _GLIBCXX_USE_GETTIMEOFDAY 1
        -: 1779:
        -: 1780:/* Define if get_nprocs is available in <sys/sysinfo.h>. */
        -: 1781:/* #undef _GLIBCXX_USE_GET_NPROCS */
        -: 1782:
        -: 1783:/* Define if init_priority should be used for iostream initialization. */
        -: 1784:#define _GLIBCXX_USE_INIT_PRIORITY_ATTRIBUTE 1
        -: 1785:
        -: 1786:/* Define if LFS support is available. */
        -: 1787:#define _GLIBCXX_USE_LFS 1
        -: 1788:
        -: 1789:/* Define if code specialized for long long should be used. */
        -: 1790:#define _GLIBCXX_USE_LONG_LONG 1
        -: 1791:
        -: 1792:/* Define if lstat is available in <sys/stat.h>. */
        -: 1793:/* #undef _GLIBCXX_USE_LSTAT */
        -: 1794:
        -: 1795:/* Define if usable mkdir is available in <sys/stat.h>. */
        -: 1796:/* #undef _GLIBCXX_USE_MKDIR */
        -: 1797:
        -: 1798:/* Defined if nanosleep is available. */
        -: 1799:#define _GLIBCXX_USE_NANOSLEEP 1
        -: 1800:
        -: 1801:/* Define if NLS translations are to be used. */
        -: 1802:/* #undef _GLIBCXX_USE_NLS */
        -: 1803:
        -: 1804:/* Define if nl_langinfo_l should be used for std::text_encoding. */
        -: 1805:/* #undef _GLIBCXX_USE_NL_LANGINFO_L */
        -: 1806:
        -: 1807:/* Define if pthreads_num_processors_np is available in <pthread.h>. */
        -: 1808:#define _GLIBCXX_USE_PTHREADS_NUM_PROCESSORS_NP 1
        -: 1809:
        -: 1810:/* Define if pthread_cond_clockwait is available in <pthread.h>. */
        -: 1811:/* #undef _GLIBCXX_USE_PTHREAD_COND_CLOCKWAIT */
        -: 1812:
        -: 1813:/* Define if pthread_mutex_clocklock is available in <pthread.h>. */
        -: 1814:/* #undef _GLIBCXX_USE_PTHREAD_MUTEX_CLOCKLOCK */
        -: 1815:
        -: 1816:/* Define if pthread_rwlock_clockrdlock and pthread_rwlock_clockwrlock are
        -: 1817:   available in <pthread.h>. */
        -: 1818:/* #undef _GLIBCXX_USE_PTHREAD_RWLOCK_CLOCKLOCK */
        -: 1819:
        -: 1820:/* Define if POSIX read/write locks are available in <gthr.h>. */
        -: 1821:#define _GLIBCXX_USE_PTHREAD_RWLOCK_T 1
        -: 1822:
        -: 1823:/* Define if /dev/random and /dev/urandom are available for the random_device
        -: 1824:   of TR1 (Chapter 5.1). */
        -: 1825:/* #undef _GLIBCXX_USE_RANDOM_TR1 */
        -: 1826:
        -: 1827:/* Define if usable realpath is available in <stdlib.h>. */
        -: 1828:/* #undef _GLIBCXX_USE_REALPATH */
        -: 1829:
        -: 1830:/* Defined if sched_yield is available. */
        -: 1831:#define _GLIBCXX_USE_SCHED_YIELD 1
        -: 1832:
        -: 1833:/* Define if _SC_NPROCESSORS_ONLN is available in <unistd.h>. */
        -: 1834:/* #undef _GLIBCXX_USE_SC_NPROCESSORS_ONLN */
        -: 1835:
        -: 1836:/* Define if _SC_NPROC_ONLN is available in <unistd.h>. */
        -: 1837:/* #undef _GLIBCXX_USE_SC_NPROC_ONLN */
        -: 1838:
        -: 1839:/* Define if sendfile is available in <sys/sendfile.h>. */
        -: 1840:/* #undef _GLIBCXX_USE_SENDFILE */
        -: 1841:
        -: 1842:/* Define to restrict std::__basic_file<> to stdio APIs. */
        -: 1843:/* #undef _GLIBCXX_USE_STDIO_PURE */
        -: 1844:
        -: 1845:/* Define if struct tm has a tm_zone member. */
        -: 1846:/* #undef _GLIBCXX_USE_STRUCT_TM_TM_ZONE */
        -: 1847:
        -: 1848:/* Define if struct stat has timespec members. */
        -: 1849:/* #undef _GLIBCXX_USE_ST_MTIM */
        -: 1850:
        -: 1851:/* Define if sysctl(), CTL_HW and HW_NCPU are available in <sys/sysctl.h>. */
        -: 1852:/* #undef _GLIBCXX_USE_SYSCTL_HW_NCPU */
        -: 1853:
        -: 1854:/* Define if obsolescent tmpnam is available in <stdio.h>. */
        -: 1855:#define _GLIBCXX_USE_TMPNAM 1
        -: 1856:
        -: 1857:/* Define if c8rtomb and mbrtoc8 functions in <uchar.h> should be imported
        -: 1858:   into namespace std in <cuchar> for C++20. */
        -: 1859:/* #undef _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_CXX20 */
        -: 1860:
        -: 1861:/* Define if c8rtomb and mbrtoc8 functions in <uchar.h> should be imported
        -: 1862:   into namespace std in <cuchar> for -fchar8_t. */
        -: 1863:/* #undef _GLIBCXX_USE_UCHAR_C8RTOMB_MBRTOC8_FCHAR8_T */
        -: 1864:
        -: 1865:/* Define if utime is available in <utime.h>. */
        -: 1866:#define _GLIBCXX_USE_UTIME 1
        -: 1867:
        -: 1868:/* Define if utimensat and UTIME_OMIT are available in <sys/stat.h> and
        -: 1869:   AT_FDCWD in <fcntl.h>. */
        -: 1870:/* #undef _GLIBCXX_USE_UTIMENSAT */
        -: 1871:
        -: 1872:/* Define if code specialized for wchar_t should be used. */
        -: 1873:#define _GLIBCXX_USE_WCHAR_T 1
        -: 1874:
        -: 1875:/* Defined if Sleep exists. */
        -: 1876:/* #undef _GLIBCXX_USE_WIN32_SLEEP */
        -: 1877:
        -: 1878:/* Define if _get_osfhandle should be used for filebuf::native_handle(). */
        -: 1879:#define _GLIBCXX_USE__GET_OSFHANDLE 1
        -: 1880:
        -: 1881:/* Define to 1 if a verbose library is built, or 0 otherwise. */
        -: 1882:#define _GLIBCXX_VERBOSE 1
        -: 1883:
        -: 1884:/* Defined if as can handle rdrand. */
        -: 1885:#define _GLIBCXX_X86_RDRAND 1
        -: 1886:
        -: 1887:/* Defined if as can handle rdseed. */
        -: 1888:#define _GLIBCXX_X86_RDSEED 1
        -: 1889:
        -: 1890:/* Define if a directory should be searched for tzdata files. */
        -: 1891:/* #undef _GLIBCXX_ZONEINFO_DIR */
        -: 1892:
        -: 1893:/* Define to 1 if mutex_timedlock is available. */
        -: 1894:#define _GTHREAD_USE_MUTEX_TIMEDLOCK 1
        -: 1895:
        -: 1896:/* Define for large files, on AIX-style hosts. */
        -: 1897:/* #undef _GLIBCXX_LARGE_FILES */
        -: 1898:
        -: 1899:/* Define if all C++11 floating point overloads are available in <math.h>.  */
        -: 1900:#if __cplusplus >= 201103L
        -: 1901:/* #undef __CORRECT_ISO_CPP11_MATH_H_PROTO_FP */
        -: 1902:#endif
        -: 1903:
        -: 1904:/* Define if all C++11 integral type overloads are available in <math.h>.  */
        -: 1905:#if __cplusplus >= 201103L
        -: 1906:/* #undef __CORRECT_ISO_CPP11_MATH_H_PROTO_INT */
        -: 1907:#endif
        -: 1908:
        -: 1909:#endif // _GLIBCXX_CXX_CONFIG_H
