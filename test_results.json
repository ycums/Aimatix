{
  "timestamp": "2025-07-14T04:20:49.962891",
  "total_tests": 1,
  "successful_tests": 1,
  "failed_tests": 0,
  "results": [
    {
      "name": "純粋ロジックテスト",
      "success": true,
      "duration": 9.181051969528198,
      "timestamp": "2025-07-14T04:20:49.962868",
      "output": "=== M5Stack集中タイマー 純粋ロジックテスト（Phase 0.6改善版） ===\nテストファイル数: 5\n\n--- time_logic テスト ---\n実行中: time_logicのコンパイル\nコマンド: g++ -I.pio/libdeps/native/Unity/src -Ilib -Itest/mocks -Isrc -Itest -std=c++11 -o time_logic test/test_time_logic_simple.cpp .pio/libdeps/native/Unity/src/unity.c test/mocks/mock_m5stack.cpp src/time_logic.cpp\n[OK] time_logicのコンパイル 成功\n実行中: time_logicの実行\nコマンド: time_logic.exe\n[OK] time_logicの実行 成功\n[OK] time_logicの実行 成功\n\n--- alarm_logic テスト ---\n実行中: alarm_logicのコンパイル\nコマンド: g++ -I.pio/libdeps/native/Unity/src -Ilib -Itest/mocks -Isrc -Itest -std=c++11 -o alarm_logic test/test_alarm_logic_simple.cpp .pio/libdeps/native/Unity/src/unity.c test/mocks/mock_m5stack.cpp src/time_logic.cpp src/alarm.cpp src/settings.cpp\n[OK] alarm_logicのコンパイル 成功\n実行中: alarm_logicの実行\nコマンド: alarm_logic.exe\n[OK] alarm_logicの実行 成功\n[OK] alarm_logicの実行 成功\n\n--- input_logic テスト ---\n実行中: input_logicのコンパイル\nコマンド: g++ -I.pio/libdeps/native/Unity/src -Ilib -Itest/mocks -Isrc -Itest -std=c++11 -o input_logic test/test_input_logic_simple.cpp .pio/libdeps/native/Unity/src/unity.c test/mocks/mock_m5stack.cpp src/time_logic.cpp\n[OK] input_logicのコンパイル 成功\n実行中: input_logicの実行\nコマンド: input_logic.exe\n[OK] input_logicの実行 成功\n[OK] input_logicの実行 成功\n\n--- settings_logic テスト ---\n実行中: settings_logicのコンパイル\nコマンド: g++ -I.pio/libdeps/native/Unity/src -Ilib -Itest/mocks -Isrc -Itest -std=c++11 -o settings_logic test/test_settings_logic_simple.cpp .pio/libdeps/native/Unity/src/unity.c test/mocks/mock_m5stack.cpp src/time_logic.cpp src/settings.cpp\n[OK] settings_logicのコンパイル 成功\n実行中: settings_logicの実行\nコマンド: settings_logic.exe\n[OK] settings_logicの実行 成功\n[OK] settings_logicの実行 成功\n\n--- warning_messages テスト ---\n実行中: warning_messagesのコンパイル\nコマンド: g++ -I.pio/libdeps/native/Unity/src -Ilib -Itest/mocks -Isrc -Itest -std=c++11 -o warning_messages test/test_warning_messages_simple.cpp .pio/libdeps/native/Unity/src/unity.c test/mocks/mock_m5stack.cpp\n[OK] warning_messagesのコンパイル 成功\n実行中: warning_messagesの実行\nコマンド: warning_messages.exe\n[OK] warning_messagesの実行 成功\n[OK] warning_messagesの実行 成功\n\n=== テスト結果 ===\n成功: 5/5\n[OK] 全テストが成功しました！\n\n[INFO] テスト結果を test_results.json に保存しました\n",
      "error_output": ""
    }
  ]
}